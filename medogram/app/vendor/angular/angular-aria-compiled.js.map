{"version":3,"sources":["angular-aria.js"],"names":[],"mappings":"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","file":"angular-aria-compiled.js","sourcesContent":["/**\n * @license AngularJS v1.5.7\n * (c) 2010-2016 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/**\n * @ngdoc module\n * @name ngAria\n * @description\n *\n * The `ngAria` module provides support for common\n * [<abbr title=\"Accessible Rich Internet Applications\">ARIA</abbr>](http://www.w3.org/TR/wai-aria/)\n * attributes that convey state or semantic information about the application for users\n * of assistive technologies, such as screen readers.\n *\n * <div doc-module-components=\"ngAria\"></div>\n *\n * ## Usage\n *\n * For ngAria to do its magic, simply include the module `ngAria` as a dependency. The following\n * directives are supported:\n * `ngModel`, `ngChecked`, `ngReadonly`, `ngRequired`, `ngValue`, `ngDisabled`, `ngShow`, `ngHide`, `ngClick`,\n * `ngDblClick`, and `ngMessages`.\n *\n * Below is a more detailed breakdown of the attributes handled by ngAria:\n *\n * | Directive                                   | Supported Attributes                                                                   |\n * |---------------------------------------------|----------------------------------------------------------------------------------------|\n * | {@link ng.directive:ngModel ngModel}        | aria-checked, aria-valuemin, aria-valuemax, aria-valuenow, aria-invalid, aria-required, input roles |\n * | {@link ng.directive:ngDisabled ngDisabled}  | aria-disabled                                                                          |\n * | {@link ng.directive:ngRequired ngRequired}  | aria-required\n * | {@link ng.directive:ngChecked ngChecked}    | aria-checked\n * | {@link ng.directive:ngReadonly ngReadonly}  | aria-readonly                                                                          |\n * | {@link ng.directive:ngValue ngValue}        | aria-checked                                                                           |\n * | {@link ng.directive:ngShow ngShow}          | aria-hidden                                                                            |\n * | {@link ng.directive:ngHide ngHide}          | aria-hidden                                                                            |\n * | {@link ng.directive:ngDblclick ngDblclick}  | tabindex                                                                               |\n * | {@link module:ngMessages ngMessages}        | aria-live                                                                              |\n * | {@link ng.directive:ngClick ngClick}        | tabindex, keypress event, button role                                                  |\n *\n * Find out more information about each directive by reading the\n * {@link guide/accessibility ngAria Developer Guide}.\n *\n * ## Example\n * Using ngDisabled with ngAria:\n * ```html\n * <md-checkbox ng-disabled=\"disabled\">\n * ```\n * Becomes:\n * ```html\n * <md-checkbox ng-disabled=\"disabled\" aria-disabled=\"true\">\n * ```\n *\n * ## Disabling Attributes\n * It's possible to disable individual attributes added by ngAria with the\n * {@link ngAria.$ariaProvider#config config} method. For more details, see the\n * {@link guide/accessibility Developer Guide}.\n */\n /* global -ngAriaModule */\nvar ngAriaModule = angular.module('ngAria', ['ng']).\n                        provider('$aria', $AriaProvider);\n\n/**\n* Internal Utilities\n*/\nvar nodeBlackList = ['BUTTON', 'A', 'INPUT', 'TEXTAREA', 'SELECT', 'DETAILS', 'SUMMARY'];\n\nvar isNodeOneOf = function(elem, nodeTypeArray) {\n  if (nodeTypeArray.indexOf(elem[0].nodeName) !== -1) {\n    return true;\n  }\n};\n/**\n * @ngdoc provider\n * @name $ariaProvider\n *\n * @description\n *\n * Used for configuring the ARIA attributes injected and managed by ngAria.\n *\n * ```js\n * angular.module('myApp', ['ngAria'], function config($ariaProvider) {\n *   $ariaProvider.config({\n *     ariaValue: true,\n *     tabindex: false\n *   });\n * });\n *```\n *\n * ## Dependencies\n * Requires the {@link ngAria} module to be installed.\n *\n */\nfunction $AriaProvider() {\n  var config = {\n    ariaHidden: true,\n    ariaChecked: true,\n    ariaReadonly: true,\n    ariaDisabled: true,\n    ariaRequired: true,\n    ariaInvalid: true,\n    ariaValue: true,\n    tabindex: true,\n    bindKeypress: true,\n    bindRoleForClick: true\n  };\n\n  /**\n   * @ngdoc method\n   * @name $ariaProvider#config\n   *\n   * @param {object} config object to enable/disable specific ARIA attributes\n   *\n   *  - **ariaHidden** – `{boolean}` – Enables/disables aria-hidden tags\n   *  - **ariaChecked** – `{boolean}` – Enables/disables aria-checked tags\n   *  - **ariaReadonly** – `{boolean}` – Enables/disables aria-readonly tags\n   *  - **ariaDisabled** – `{boolean}` – Enables/disables aria-disabled tags\n   *  - **ariaRequired** – `{boolean}` – Enables/disables aria-required tags\n   *  - **ariaInvalid** – `{boolean}` – Enables/disables aria-invalid tags\n   *  - **ariaValue** – `{boolean}` – Enables/disables aria-valuemin, aria-valuemax and aria-valuenow tags\n   *  - **tabindex** – `{boolean}` – Enables/disables tabindex tags\n   *  - **bindKeypress** – `{boolean}` – Enables/disables keypress event binding on `div` and\n   *    `li` elements with ng-click\n   *  - **bindRoleForClick** – `{boolean}` – Adds role=button to non-interactive elements like `div`\n   *    using ng-click, making them more accessible to users of assistive technologies\n   *\n   * @description\n   * Enables/disables various ARIA attributes\n   */\n  this.config = function(newConfig) {\n    config = angular.extend(config, newConfig);\n  };\n\n  function watchExpr(attrName, ariaAttr, nodeBlackList, negate) {\n    return function(scope, elem, attr) {\n      var ariaCamelName = attr.$normalize(ariaAttr);\n      if (config[ariaCamelName] && !isNodeOneOf(elem, nodeBlackList) && !attr[ariaCamelName]) {\n        scope.$watch(attr[attrName], function(boolVal) {\n          // ensure boolean value\n          boolVal = negate ? !boolVal : !!boolVal;\n          elem.attr(ariaAttr, boolVal);\n        });\n      }\n    };\n  }\n  /**\n   * @ngdoc service\n   * @name $aria\n   *\n   * @description\n   * @priority 200\n   *\n   * The $aria service contains helper methods for applying common\n   * [ARIA](http://www.w3.org/TR/wai-aria/) attributes to HTML directives.\n   *\n   * ngAria injects common accessibility attributes that tell assistive technologies when HTML\n   * elements are enabled, selected, hidden, and more. To see how this is performed with ngAria,\n   * let's review a code snippet from ngAria itself:\n   *\n   *```js\n   * ngAriaModule.directive('ngDisabled', ['$aria', function($aria) {\n   *   return $aria.$$watchExpr('ngDisabled', 'aria-disabled', nodeBlackList, false);\n   * }])\n   *```\n   * Shown above, the ngAria module creates a directive with the same signature as the\n   * traditional `ng-disabled` directive. But this ngAria version is dedicated to\n   * solely managing accessibility attributes on custom elements. The internal `$aria` service is\n   * used to watch the boolean attribute `ngDisabled`. If it has not been explicitly set by the\n   * developer, `aria-disabled` is injected as an attribute with its value synchronized to the\n   * value in `ngDisabled`.\n   *\n   * Because ngAria hooks into the `ng-disabled` directive, developers do not have to do\n   * anything to enable this feature. The `aria-disabled` attribute is automatically managed\n   * simply as a silent side-effect of using `ng-disabled` with the ngAria module.\n   *\n   * The full list of directives that interface with ngAria:\n   * * **ngModel**\n   * * **ngChecked**\n   * * **ngReadonly**\n   * * **ngRequired**\n   * * **ngDisabled**\n   * * **ngValue**\n   * * **ngShow**\n   * * **ngHide**\n   * * **ngClick**\n   * * **ngDblclick**\n   * * **ngMessages**\n   *\n   * Read the {@link guide/accessibility ngAria Developer Guide} for a thorough explanation of each\n   * directive.\n   *\n   *\n   * ## Dependencies\n   * Requires the {@link ngAria} module to be installed.\n   */\n  this.$get = function() {\n    return {\n      config: function(key) {\n        return config[key];\n      },\n      $$watchExpr: watchExpr\n    };\n  };\n}\n\n\nngAriaModule.directive('ngShow', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngShow', 'aria-hidden', [], true);\n}])\n.directive('ngHide', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngHide', 'aria-hidden', [], false);\n}])\n.directive('ngValue', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngValue', 'aria-checked', nodeBlackList, false);\n}])\n.directive('ngChecked', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngChecked', 'aria-checked', nodeBlackList, false);\n}])\n.directive('ngReadonly', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngReadonly', 'aria-readonly', nodeBlackList, false);\n}])\n.directive('ngRequired', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngRequired', 'aria-required', nodeBlackList, false);\n}])\n.directive('ngModel', ['$aria', function($aria) {\n\n  function shouldAttachAttr(attr, normalizedAttr, elem, allowBlacklistEls) {\n    return $aria.config(normalizedAttr) && !elem.attr(attr) && (allowBlacklistEls || !isNodeOneOf(elem, nodeBlackList));\n  }\n\n  function shouldAttachRole(role, elem) {\n    // if element does not have role attribute\n    // AND element type is equal to role (if custom element has a type equaling shape) <-- remove?\n    // AND element is not INPUT\n    return !elem.attr('role') && (elem.attr('type') === role) && (elem[0].nodeName !== 'INPUT');\n  }\n\n  function getShape(attr, elem) {\n    var type = attr.type,\n        role = attr.role;\n\n    return ((type || role) === 'checkbox' || role === 'menuitemcheckbox') ? 'checkbox' :\n           ((type || role) === 'radio'    || role === 'menuitemradio') ? 'radio' :\n           (type === 'range'              || role === 'progressbar' || role === 'slider') ? 'range' : '';\n  }\n\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    priority: 200, //Make sure watches are fired after any other directives that affect the ngModel value\n    compile: function(elem, attr) {\n      var shape = getShape(attr, elem);\n\n      return {\n        pre: function(scope, elem, attr, ngModel) {\n          if (shape === 'checkbox') {\n            //Use the input[checkbox] $isEmpty implementation for elements with checkbox roles\n            ngModel.$isEmpty = function(value) {\n              return value === false;\n            };\n          }\n        },\n        post: function(scope, elem, attr, ngModel) {\n          var needsTabIndex = shouldAttachAttr('tabindex', 'tabindex', elem, false);\n\n          function ngAriaWatchModelValue() {\n            return ngModel.$modelValue;\n          }\n\n          function getRadioReaction(newVal) {\n            var boolVal = (attr.value == ngModel.$viewValue);\n            elem.attr('aria-checked', boolVal);\n          }\n\n          function getCheckboxReaction() {\n            elem.attr('aria-checked', !ngModel.$isEmpty(ngModel.$viewValue));\n          }\n\n          switch (shape) {\n            case 'radio':\n            case 'checkbox':\n              if (shouldAttachRole(shape, elem)) {\n                elem.attr('role', shape);\n              }\n              if (shouldAttachAttr('aria-checked', 'ariaChecked', elem, false)) {\n                scope.$watch(ngAriaWatchModelValue, shape === 'radio' ?\n                    getRadioReaction : getCheckboxReaction);\n              }\n              if (needsTabIndex) {\n                elem.attr('tabindex', 0);\n              }\n              break;\n            case 'range':\n              if (shouldAttachRole(shape, elem)) {\n                elem.attr('role', 'slider');\n              }\n              if ($aria.config('ariaValue')) {\n                var needsAriaValuemin = !elem.attr('aria-valuemin') &&\n                    (attr.hasOwnProperty('min') || attr.hasOwnProperty('ngMin'));\n                var needsAriaValuemax = !elem.attr('aria-valuemax') &&\n                    (attr.hasOwnProperty('max') || attr.hasOwnProperty('ngMax'));\n                var needsAriaValuenow = !elem.attr('aria-valuenow');\n\n                if (needsAriaValuemin) {\n                  attr.$observe('min', function ngAriaValueMinReaction(newVal) {\n                    elem.attr('aria-valuemin', newVal);\n                  });\n                }\n                if (needsAriaValuemax) {\n                  attr.$observe('max', function ngAriaValueMinReaction(newVal) {\n                    elem.attr('aria-valuemax', newVal);\n                  });\n                }\n                if (needsAriaValuenow) {\n                  scope.$watch(ngAriaWatchModelValue, function ngAriaValueNowReaction(newVal) {\n                    elem.attr('aria-valuenow', newVal);\n                  });\n                }\n              }\n              if (needsTabIndex) {\n                elem.attr('tabindex', 0);\n              }\n              break;\n          }\n\n          if (!attr.hasOwnProperty('ngRequired') && ngModel.$validators.required\n            && shouldAttachAttr('aria-required', 'ariaRequired', elem, false)) {\n            // ngModel.$error.required is undefined on custom controls\n            attr.$observe('required', function() {\n              elem.attr('aria-required', !!attr['required']);\n            });\n          }\n\n          if (shouldAttachAttr('aria-invalid', 'ariaInvalid', elem, true)) {\n            scope.$watch(function ngAriaInvalidWatch() {\n              return ngModel.$invalid;\n            }, function ngAriaInvalidReaction(newVal) {\n              elem.attr('aria-invalid', !!newVal);\n            });\n          }\n        }\n      };\n    }\n  };\n}])\n.directive('ngDisabled', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngDisabled', 'aria-disabled', nodeBlackList, false);\n}])\n.directive('ngMessages', function() {\n  return {\n    restrict: 'A',\n    require: '?ngMessages',\n    link: function(scope, elem, attr, ngMessages) {\n      if (!elem.attr('aria-live')) {\n        elem.attr('aria-live', 'assertive');\n      }\n    }\n  };\n})\n.directive('ngClick',['$aria', '$parse', function($aria, $parse) {\n  return {\n    restrict: 'A',\n    compile: function(elem, attr) {\n      var fn = $parse(attr.ngClick, /* interceptorFn */ null, /* expensiveChecks */ true);\n      return function(scope, elem, attr) {\n\n        if (!isNodeOneOf(elem, nodeBlackList)) {\n\n          if ($aria.config('bindRoleForClick') && !elem.attr('role')) {\n            elem.attr('role', 'button');\n          }\n\n          if ($aria.config('tabindex') && !elem.attr('tabindex')) {\n            elem.attr('tabindex', 0);\n          }\n\n          if ($aria.config('bindKeypress') && !attr.ngKeypress) {\n            elem.on('keypress', function(event) {\n              var keyCode = event.which || event.keyCode;\n              if (keyCode === 32 || keyCode === 13) {\n                scope.$apply(callback);\n              }\n\n              function callback() {\n                fn(scope, { $event: event });\n              }\n            });\n          }\n        }\n      };\n    }\n  };\n}])\n.directive('ngDblclick', ['$aria', function($aria) {\n  return function(scope, elem, attr) {\n    if ($aria.config('tabindex') && !elem.attr('tabindex') && !isNodeOneOf(elem, nodeBlackList)) {\n      elem.attr('tabindex', 0);\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n"]}