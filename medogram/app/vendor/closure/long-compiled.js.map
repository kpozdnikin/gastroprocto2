{"version":3,"sources":["long.js"],"names":[],"mappings":"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","file":"long-compiled.js","sourcesContent":["// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"long\". This\n * implementation is derived from LongLib in GWT.\n *\n */\n\n/**\n * This file also contains some modifications by Igor Zhukov in order to add custom scrollbars to EmojiMenu\n * See keyword `MODIFICATION` in source code.\n */\n\n/*! MODIFICATION\nThe following line was added by Igor Zhukov in order to make library compatibile with other app parts\n*/\nthis.goog = {provide: function () {}, math: {}};\n\n\ngoog.provide('goog.math.Long');\n\n\n\n/**\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @param {number} low  The low (signed) 32 bits of the long.\n * @param {number} high  The high (signed) 32 bits of the long.\n * @constructor\n */\ngoog.math.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @private\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n};\n\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @private\n */\ngoog.math.Long.IntCache_ = {};\n\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n * @param {number} value The 32-bit integer in question.\n * @return {!goog.math.Long} The corresponding Long value.\n */\ngoog.math.Long.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = goog.math.Long.IntCache_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    goog.math.Long.IntCache_[value] = obj;\n  }\n  return obj;\n};\n\n\n/**\n * Returns a Long representing the given value, provided that it is a finite\n * number.  Otherwise, zero is returned.\n * @param {number} value The number in question.\n * @return {!goog.math.Long} The corresponding Long value.\n */\ngoog.math.Long.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return goog.math.Long.ZERO;\n  } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {\n    return goog.math.Long.MIN_VALUE;\n  } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {\n    return goog.math.Long.MAX_VALUE;\n  } else if (value < 0) {\n    return goog.math.Long.fromNumber(-value).negate();\n  } else {\n    return new goog.math.Long(\n        (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,\n        (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating\n * the given high and low bits.  Each is assumed to use 32 bits.\n * @param {number} lowBits The low 32-bits.\n * @param {number} highBits The high 32-bits.\n * @return {!goog.math.Long} The corresponding Long value.\n */\ngoog.math.Long.fromBits = function(lowBits, highBits) {\n  return new goog.math.Long(lowBits, highBits);\n};\n\n\n/**\n * Returns a Long representation of the given string, written using the given\n * radix.\n * @param {string} str The textual representation of the Long.\n * @param {number=} opt_radix The radix in which the text is written.\n * @return {!goog.math.Long} The corresponding Long value.\n */\ngoog.math.Long.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return goog.math.Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));\n\n  var result = goog.math.Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = goog.math.Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(goog.math.Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(goog.math.Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @private\n */\ngoog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;\n\n\n/**\n * @type {number}\n * @private\n */\ngoog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;\n\n\n/**\n * @type {number}\n * @private\n */\ngoog.math.Long.TWO_PWR_32_DBL_ =\n    goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;\n\n\n/**\n * @type {number}\n * @private\n */\ngoog.math.Long.TWO_PWR_31_DBL_ =\n    goog.math.Long.TWO_PWR_32_DBL_ / 2;\n\n\n/**\n * @type {number}\n * @private\n */\ngoog.math.Long.TWO_PWR_48_DBL_ =\n    goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;\n\n\n/**\n * @type {number}\n * @private\n */\ngoog.math.Long.TWO_PWR_64_DBL_ =\n    goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;\n\n\n/**\n * @type {number}\n * @private\n */\ngoog.math.Long.TWO_PWR_63_DBL_ =\n    goog.math.Long.TWO_PWR_64_DBL_ / 2;\n\n\n/** @type {!goog.math.Long} */\ngoog.math.Long.ZERO = goog.math.Long.fromInt(0);\n\n\n/** @type {!goog.math.Long} */\ngoog.math.Long.ONE = goog.math.Long.fromInt(1);\n\n\n/** @type {!goog.math.Long} */\ngoog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);\n\n\n/** @type {!goog.math.Long} */\ngoog.math.Long.MAX_VALUE =\n    goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n\n/** @type {!goog.math.Long} */\ngoog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);\n\n\n/**\n * @type {!goog.math.Long}\n * @private\n */\ngoog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);\n\n\n/** @return {number} The value, assuming it is a 32-bit integer. */\ngoog.math.Long.prototype.toInt = function() {\n  return this.low_;\n};\n\n\n/** @return {number} The closest floating-point representation to this value. */\ngoog.math.Long.prototype.toNumber = function() {\n  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +\n         this.getLowBitsUnsigned();\n};\n\n\n/**\n * @param {number=} opt_radix The radix in which the text should be written.\n * @return {string} The textual representation of this value.\n * @override\n */\ngoog.math.Long.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(goog.math.Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = goog.math.Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n\n/** @return {number} The high 32-bits as a signed value. */\ngoog.math.Long.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n\n/** @return {number} The low 32-bits as a signed value. */\ngoog.math.Long.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n\n/** @return {number} The low 32-bits as an unsigned value. */\ngoog.math.Long.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n\n/**\n * @return {number} Returns the number of bits needed to represent the absolute\n *     value of this Long.\n */\ngoog.math.Long.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(goog.math.Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n\n/** @return {boolean} Whether this value is zero. */\ngoog.math.Long.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n\n/** @return {boolean} Whether this value is negative. */\ngoog.math.Long.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n\n/** @return {boolean} Whether this value is odd. */\ngoog.math.Long.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n\n/**\n * @param {goog.math.Long} other Long to compare against.\n * @return {boolean} Whether this Long equals the other.\n */\ngoog.math.Long.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n\n/**\n * @param {goog.math.Long} other Long to compare against.\n * @return {boolean} Whether this Long does not equal the other.\n */\ngoog.math.Long.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n\n/**\n * @param {goog.math.Long} other Long to compare against.\n * @return {boolean} Whether this Long is less than the other.\n */\ngoog.math.Long.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n\n/**\n * @param {goog.math.Long} other Long to compare against.\n * @return {boolean} Whether this Long is less than or equal to the other.\n */\ngoog.math.Long.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n\n/**\n * @param {goog.math.Long} other Long to compare against.\n * @return {boolean} Whether this Long is greater than the other.\n */\ngoog.math.Long.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n\n/**\n * @param {goog.math.Long} other Long to compare against.\n * @return {boolean} Whether this Long is greater than or equal to the other.\n */\ngoog.math.Long.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n\n/**\n * Compares this Long with the given one.\n * @param {goog.math.Long} other Long to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n *     if the given one is greater.\n */\ngoog.math.Long.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n\n/** @return {!goog.math.Long} The negation of this value. */\ngoog.math.Long.prototype.negate = function() {\n  if (this.equals(goog.math.Long.MIN_VALUE)) {\n    return goog.math.Long.MIN_VALUE;\n  } else {\n    return this.not().add(goog.math.Long.ONE);\n  }\n};\n\n\n/**\n * Returns the sum of this and the given Long.\n * @param {goog.math.Long} other Long to add to this one.\n * @return {!goog.math.Long} The sum of this and the given Long.\n */\ngoog.math.Long.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n\n/**\n * Returns the difference of this and the given Long.\n * @param {goog.math.Long} other Long to subtract from this.\n * @return {!goog.math.Long} The difference of this and the given Long.\n */\ngoog.math.Long.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n\n/**\n * Returns the product of this and the given long.\n * @param {goog.math.Long} other Long to multiply with this.\n * @return {!goog.math.Long} The product of this and the other.\n */\ngoog.math.Long.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return goog.math.Long.ZERO;\n  } else if (other.isZero()) {\n    return goog.math.Long.ZERO;\n  }\n\n  if (this.equals(goog.math.Long.MIN_VALUE)) {\n    return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;\n  } else if (other.equals(goog.math.Long.MIN_VALUE)) {\n    return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both longs are small, use float multiplication\n  if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&\n      other.lessThan(goog.math.Long.TWO_PWR_24_)) {\n    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n\n/**\n * Returns this Long divided by the given one.\n * @param {goog.math.Long} other Long by which to divide.\n * @return {!goog.math.Long} This Long divided by the given one.\n */\ngoog.math.Long.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return goog.math.Long.ZERO;\n  }\n\n  if (this.equals(goog.math.Long.MIN_VALUE)) {\n    if (other.equals(goog.math.Long.ONE) ||\n        other.equals(goog.math.Long.NEG_ONE)) {\n      return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(goog.math.Long.MIN_VALUE)) {\n      return goog.math.Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(goog.math.Long.ZERO)) {\n        return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(goog.math.Long.MIN_VALUE)) {\n    return goog.math.Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = goog.math.Long.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = goog.math.Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = goog.math.Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = goog.math.Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n\n/**\n * Returns this Long modulo the given one.\n * @param {goog.math.Long} other Long by which to mod.\n * @return {!goog.math.Long} This Long modulo the given one.\n */\ngoog.math.Long.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n\n/** @return {!goog.math.Long} The bitwise-NOT of this value. */\ngoog.math.Long.prototype.not = function() {\n  return goog.math.Long.fromBits(~this.low_, ~this.high_);\n};\n\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n * @param {goog.math.Long} other The Long with which to AND.\n * @return {!goog.math.Long} The bitwise-AND of this and the other.\n */\ngoog.math.Long.prototype.and = function(other) {\n  return goog.math.Long.fromBits(this.low_ & other.low_,\n                                 this.high_ & other.high_);\n};\n\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n * @param {goog.math.Long} other The Long with which to OR.\n * @return {!goog.math.Long} The bitwise-OR of this and the other.\n */\ngoog.math.Long.prototype.or = function(other) {\n  return goog.math.Long.fromBits(this.low_ | other.low_,\n                                 this.high_ | other.high_);\n};\n\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n * @param {goog.math.Long} other The Long with which to XOR.\n * @return {!goog.math.Long} The bitwise-XOR of this and the other.\n */\ngoog.math.Long.prototype.xor = function(other) {\n  return goog.math.Long.fromBits(this.low_ ^ other.low_,\n                                 this.high_ ^ other.high_);\n};\n\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!goog.math.Long} This shifted to the left by the given amount.\n */\ngoog.math.Long.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return goog.math.Long.fromBits(\n          low << numBits,\n          (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return goog.math.Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!goog.math.Long} This shifted to the right by the given amount.\n */\ngoog.math.Long.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return goog.math.Long.fromBits(\n          (low >>> numBits) | (high << (32 - numBits)),\n          high >> numBits);\n    } else {\n      return goog.math.Long.fromBits(\n          high >> (numBits - 32),\n          high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with\n * the new top bits matching the current sign bit.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!goog.math.Long} This shifted to the right by the given amount, with\n *     zeros placed into the new leading bits.\n */\ngoog.math.Long.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return goog.math.Long.fromBits(\n          (low >>> numBits) | (high << (32 - numBits)),\n          high >>> numBits);\n    } else if (numBits == 32) {\n      return goog.math.Long.fromBits(high, 0);\n    } else {\n      return goog.math.Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};"]}