{"version":3,"sources":["angular-media-player.js"],"names":[],"mappings":"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","file":"angular-media-player-compiled.js","sourcesContent":["/**\n * MDN references for hackers:\n * ===========================\n * Media events on <audio> and <video> tags:\n * https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Media_events\n * Properties and Methods:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement\n * Internet Exploder version:\n * http://msdn.microsoft.com/en-us/library/ff975061(v=vs.85).aspx\n *\n * Understanding TimeRanges objects:\n * http://html5doctor.com/html5-audio-the-state-of-play/\n */\nangular.module('mediaPlayer', ['mediaPlayer.helpers'])\n.constant('mp.playerDefaults', {\n  // general properties\n  currentTrack: 0,\n  ended: undefined,\n  network: undefined,\n  playing: false,\n  seeking: false,\n  tracks: 0,\n  volume: 1,\n\n  // formatted properties\n  formatDuration: '00:00',\n  formatTime: '00:00',\n  loadPercent: 0\n})\n\n.directive('mediaPlayer', ['$rootScope', '$interpolate', '$timeout', 'mp.throttle', 'mp.playerDefaults',\n  function ($rootScope, $interpolate, $timeout, throttle, playerDefaults) {\n\n    var playerMethods = {\n      /**\n       * @usage load([mediaElement], [autoplay]);\n       *\n       * @param  {mediaElement Obj} mediaElement a single mediaElement, may contain multiple <source>(s)\n       * @param  {boolean} autoplay: flag to autostart loaded element\n       */\n      load: function (mediaElement, autoplay) {\n        // method overloading\n        if (typeof mediaElement === 'boolean') {\n          autoplay = mediaElement;\n          mediaElement = null;\n        } else if (typeof mediaElement === 'object') {\n          this.$clearSourceList();\n          this.$addSourceList(mediaElement);\n        }\n        this.$domEl.load();\n        this.ended = undefined;\n        if (autoplay) {\n          this.$element.one('canplay', this.play.bind(this));\n        }\n      },\n      /**\n       * resets the player (clear the <source>s) and reloads the playlist\n       *\n       * @usage reset([autoplay]);\n       * @param {boolean} autoplay: flag to autoplay once resetted\n       */\n      reset: function (autoplay) {\n        angular.extend(this, playerDefaults);\n        this.$clearSourceList();\n        this.load(this.$playlist, autoplay);\n      },\n      /**\n       * @usage play([index], [selectivePlay])\n       * @param {integer} index: playlist index (0...n), to start playing from\n       * @param {boolean} selectivePlay: only correct value is `true`, in which case will only play the specified,\n       *                                 or current, track. The default is to continue playing the next one.\n       */\n      play: function (index, selectivePlay) {\n        // method overloading\n        if (typeof index === 'boolean') {\n          selectivePlay = index;\n          index = undefined;\n        }\n        if (selectivePlay) {\n          this.$selective = true;\n        }\n\n        if (this.$playlist.length > index) {\n          this.currentTrack = index + 1;\n          return this.load(this.$playlist[index], true);\n        }\n        // readyState = HAVE_NOTHING (0) means there's nothing into the <audio>/<video> tag\n        if (!this.currentTrack && this.$domEl.readyState) { this.currentTrack++; }\n\n        // In case the stream is completed, reboot it with a load()\n        if (this.ended) {\n          this.load(true);\n        } else {\n          this.$domEl.play();\n        }\n      },\n      playPause: function (index, selectivePlay) {\n        // method overloading\n        if (typeof index === 'boolean') {\n          selectivePlay = index;\n          index = undefined;\n        }\n        if (selectivePlay) {\n          this.$selective = true;\n        }\n\n        if (typeof index === 'number' && index + 1 !== this.currentTrack) {\n          this.play(index);\n        } else if (this.playing) {\n          this.pause();\n        } else {\n          this.play();\n        }\n      },\n      pause: function () {\n        this.$domEl.pause();\n      },\n      stop: function () {\n        this.reset();\n      },\n      toggleMute: function () {\n        this.muted = this.$domEl.muted = !this.$domEl.muted;\n      },\n      next: function (autoplay) {\n        var self = this;\n        if (self.currentTrack && self.currentTrack < self.tracks) {\n          var wasPlaying = autoplay || self.playing;\n          self.pause();\n          $timeout(function () {\n            self.$clearSourceList();\n            self.$addSourceList(self.$playlist[self.currentTrack]);\n            self.load(wasPlaying); // setup autoplay here.\n            self.currentTrack++;\n          });\n        }\n      },\n      prev: function (autoplay) {\n        var self = this;\n        if (self.currentTrack && self.currentTrack - 1) {\n          var wasPlaying = autoplay || self.playing;\n          self.pause();\n          $timeout(function () {\n            self.$clearSourceList();\n            self.$addSourceList(self.$playlist[self.currentTrack - 2]);\n            self.load(wasPlaying); // setup autoplay here.\n            self.currentTrack--;\n          });\n        }\n      },\n      setPlaybackRate: function (value) {\n        this.$domEl.playbackRate = value;\n      },\n      setVolume: function (value) {\n        this.$domEl.volume = value;\n      },\n      seek: function (value) {\n        var doubleval = 0, valuesArr;\n        if (typeof value === 'string') {\n          valuesArr = value.split(':');\n          doubleval += parseInt(valuesArr.pop(), 10);\n          if (valuesArr.length) { doubleval += parseInt(valuesArr.pop(), 10) * 60; }\n          if (valuesArr.length) { doubleval += parseInt(valuesArr.pop(), 10) * 3600; }\n          if (!isNaN(doubleval)) {\n            return this.$domEl.currentTime = doubleval;\n          }\n        } else {\n          return this.$domEl.currentTime = value;\n        }\n      },\n      /**\n       * binds a specific event directly to the element\n       * @param  {string}   type   event name\n       * @param  {function} fn     callback\n       * @return {function}        unbind function, call it in order to remove the listener\n       */\n      on: function (type, fn) {\n        return this.$element.on(type, fn);\n      },\n      off: function (type, fn) {\n        return this.$element.off(type, fn);\n      },\n      one: function (type, fn) {\n        return this.$element.one(type, fn);\n      },\n      $addSourceList: function (sourceList) {\n        var self = this;\n        if (angular.isArray(sourceList)) {\n          angular.forEach(sourceList, function (singleElement, index) {\n            var sourceElem = document.createElement('SOURCE');\n            ['src', 'type', 'media'].forEach(function (key) { // use only a subset of the properties\n              if (singleElement[key] !== undefined) { // firefox is picky if you set undefined attributes\n                sourceElem.setAttribute(key, singleElement[key]);\n              }\n            });\n            self.$element.append(sourceElem);\n          });\n        } else if (angular.isObject(sourceList)) {\n          var sourceElem = document.createElement('SOURCE');\n          ['src', 'type', 'media'].forEach(function (key) {\n            if (sourceList[key] !== undefined) {\n              sourceElem.setAttribute(key, sourceList[key]);\n            }\n          });\n          self.$element.append(sourceElem);\n        }\n      },\n      $clearSourceList: function () {\n        this.$element.contents().remove();\n      },\n      $formatTime: function (seconds) {\n        if (seconds === Infinity) {\n          return '∞'; // If the data is streaming\n        }\n        var hours = parseInt(seconds / 3600, 10) % 24,\n            minutes = parseInt(seconds / 60, 10) % 60,\n            secs = parseInt(seconds % 60, 10),\n            result,\n            fragment = (minutes < 10 ? '0' + minutes : minutes) + ':' + (secs  < 10 ? '0' + secs : secs);\n        if (hours > 0) {\n          result = (hours < 10 ? '0' + hours : hours) + ':' + fragment;\n        } else {\n          result = fragment;\n        }\n        return result;\n      },\n      $attachPlaylist: function (pl) {\n        if (pl === undefined || pl === null) {\n          this.playlist = [];\n        } else {\n          this.$playlist = pl;\n        }\n      }\n    };\n\n    /**\n     * Binding function that gives life to AngularJS scope\n     * @param  {Scope}  au        Player Scope\n     * @param  {HTMLMediaElement} HTML5 element\n     * @param  {jQlite} element   <audio>/<video> element\n     * @return {function}\n     *\n     * Returns an unbinding function\n     */\n    var bindListeners = function (au, al, element) {\n      var listeners = {\n        playing: function () {\n          au.$apply(function (scope) {\n            scope.playing = true;\n            scope.ended = false;\n          });\n        },\n        pause: function () {\n          au.$apply(function (scope) {\n            scope.playing = false;\n          });\n        },\n        ended: function () {\n          if (!au.$selective && au.currentTrack < au.tracks) {\n            au.next(true);\n          } else {\n            au.$apply(function (scope) {\n              scope.ended = true;\n              scope.playing = false; // IE9 does not throw 'pause' when file ends\n            });\n          }\n        },\n        timeupdate: throttle(1000, false, function () {\n          au.$apply(function (scope) {\n            scope.currentTime = al.currentTime;\n            scope.formatTime = scope.$formatTime(scope.currentTime);\n          });\n        }),\n        loadedmetadata: function () {\n          au.$apply(function (scope) {\n            if (!scope.currentTrack) { scope.currentTrack++; } // This is triggered *ONLY* the first time a <source> gets loaded.\n            scope.duration = al.duration;\n            scope.formatDuration = scope.$formatTime(scope.duration);\n            if (al.buffered.length) {\n              scope.loadPercent = Math.round((al.buffered.end(al.buffered.length - 1) / scope.duration) * 100);\n            }\n          });\n        },\n        progress: function () {\n          if (au.$domEl.buffered.length) {\n            au.$apply(function (scope) {\n              scope.loadPercent = Math.round((al.buffered.end(al.buffered.length - 1) / scope.duration) * 100);\n              scope.network = 'progress';\n            });\n          }\n        },\n        volumechange: function () { // Sent when volume changes (both when the volume is set and when the muted attribute is changed).\n          au.$apply(function (scope) {\n            // scope.volume = Math.floor(al.volume * 100);\n            scope.volume = al.volume;\n            scope.muted = al.muted;\n          });\n        },\n        seeked: function () {\n          au.$apply(function (scope) {\n            scope.seeking = false;\n          });\n        },\n        seeking: function () {\n          au.$apply(function (scope) {\n            scope.seeking = true;\n          });\n        },\n        ratechange: function () {\n          au.$apply(function (scope) {\n            // scope.playbackRate = Math.floor(al.playbackRate * 100);\n            scope.playbackRate = al.playbackRate;\n          });\n        },\n        stalled: function () {\n          au.$apply(function (scope) {\n            scope.network = 'stalled';\n          });\n        },\n        suspend: function () {\n          au.$apply(function (scope) {\n            scope.network = 'suspend';\n          });\n        }\n      };\n\n      angular.forEach(listeners, function (f, listener) {\n        element.on(listener, f);\n      });\n    };\n\n    var MediaPlayer = function (element) {\n      var mediaScope = angular.extend($rootScope.$new(true), {\n        $element: element,\n        $domEl: element[0],\n        $playlist: undefined,\n\n        // bind TimeRanges structures to actual MediaElement\n        buffered: element[0].buffered,\n        played: element[0].played,\n        seekable: element[0].seekable,\n      }, playerDefaults, playerMethods);\n      bindListeners(mediaScope, element[0], element);\n      return mediaScope;\n    };\n\n    // creates a watch function bound to the specific player\n    // optimizable: closures eats ram\n    function playlistWatch(player) {\n      return function (playlistNew, playlistOld, watchScope) {\n        var currentTrack,\n            newTrackNum = null;\n\n        // on every playlist change, it refreshes the reference, safer/shorter approach\n        // than using multiple ifs and refresh only if it changed; there's no benefit in that\n        player.$attachPlaylist(playlistNew);\n        if (playlistNew === undefined && playlistOld !== undefined) {\n          return player.pause();\n        }\n\n        /**\n         * Playlist update logic:\n         * If the player has started ->\n         *   Check if the playing track is in the new Playlist [EXAMPLE BELOW]\n         *   If it is ->\n         *     Assign to it the new tracknumber\n         *   Else ->\n         *     If the new Playlist has some song ->\n         *       Pause the player, and get the new Playlist\n         *     Else ->\n         *       Reset the player, and await for orders\n         *\n         * Else (if the player hasn't started yet)\n         *   Just replace the <src> tags\n         *\n         * Example\n         * playlist: [a,b,c], playing: c, trackNum: 2\n         * ----delay 5 sec-----\n         * playlist: [f,a,b,c], playing: c, trackNum: 3\n         *\n         */\n        if (player.currentTrack) {\n          currentTrack = playlistOld ? playlistOld[player.currentTrack - 1] : -1;\n          for (var i = 0; i < playlistNew.length; i++) {\n            if (angular.equals(playlistNew[i], currentTrack)) { newTrackNum = i; break; }\n          }\n          if (newTrackNum !== null) { // currentTrack it's still in the new playlist, update trackNumber\n            player.currentTrack = newTrackNum + 1;\n            player.tracks = playlistNew.length;\n          } else { // currentTrack has been removed.\n            player.pause();\n            if (playlistNew.length) { // if the new playlist has some elements, replace actual.\n              $timeout(function () { // need $timeout because the mediaTag needs a little time to launch the 'pause' event\n                player.$clearSourceList();\n                player.$addSourceList(playlistNew[0]);\n                player.load();\n                player.tracks = playlistNew.length;\n              });\n            } else { // the new playlist has no elements, clear actual\n              player.reset();\n            }\n          }\n        } else if (playlistNew.length) { // new playlist has elements, load them\n          player.$clearSourceList();\n          player.$addSourceList(playlistNew[0]);\n          player.load();\n          player.tracks = playlistNew.length;\n        } else { // new playlist has no elements, clear actual\n          player.reset();\n        }\n      };\n    }\n\n    return {\n      /**\n       * The directive uses the Scope in which gets declared,\n       * so it can read/write it with ease.\n       * The only isolated Scope here gets created for the MediaPlayer.\n       */\n      scope: false,\n      link: function (scope, element, attrs, ctrl) {\n        var playlistName = attrs.playlist,\n            mediaName = attrs.mediaPlayer || attrs.playerControl;\n\n        var player = new MediaPlayer(element), playlist = scope[playlistName];\n        // create data-structures in the father Scope\n        if (playlistName === undefined) {\n          playlist = []; // local playlist gets defined as new\n        } else if (scope[playlistName] === undefined) {\n          playlist = scope[playlistName] = []; // define playlist on father scope\n        } else {\n          playlist = scope[playlistName];\n        }\n        if (mediaName !== undefined) {\n          scope.$eval(mediaName + ' = player', {player: player});\n        }\n\n        if (element[0].tagName !== 'AUDIO' && element[0].tagName !== 'VIDEO') {\n          return new Error('player directive works only when attached to an <audio>/<video> type tag');\n        }\n        var mediaElement = [],\n            sourceElements = element.find('source');\n\n        // create a single playlist element from <source> tag(s).\n        // if the <source> tag is one, use object notation...\n        if (sourceElements.length === 1) {\n          playlist.unshift({ src: sourceElements[0].src, type: sourceElements[0].type, media: sourceElements[0].media });\n        } else if (sourceElements.length > 1) { // otherwise use array notation\n          angular.forEach(sourceElements, function (sourceElement) {\n            mediaElement.push({ src: sourceElement.src, type: sourceElement.type, media: sourceElement.media });\n          });\n          // put mediaElement as first element in the playlist\n          playlist.unshift(mediaElement);\n        }\n\n        /**\n         * If the user wants to keep track of the playlist changes\n         * has to use data-playlist=\"variableName\" in the <audio>/<video> tag\n         *\n         * Otherwise: it will be created an empty playlist and attached to the player.\n         */\n        if (playlistName === undefined) {\n          player.$attachPlaylist(playlist); // empty playlist case\n        } else if (playlist.length) {\n          playlistWatch(player)(playlist, undefined, scope); // playlist already populated gets bootstrapped\n          scope.$watch(playlistName, playlistWatch(player), true); // then watch gets applied\n        } else {\n          scope.$watch(playlistName, playlistWatch(player), true); // playlist empty, only watch\n        }\n      }\n    };\n\n  }]\n);\n\nangular.module('mediaPlayer.helpers', [])\n.factory('mp.throttle', ['$timeout', function ($timeout) {\n  return function (delay, no_trailing, callback, debounce_mode) {\n    var timeout_id,\n    last_exec = 0;\n\n    if (typeof no_trailing !== 'boolean') {\n      debounce_mode = callback;\n      callback = no_trailing;\n      no_trailing = undefined;\n    }\n\n    var wrapper = function () {\n      var that = this,\n          elapsed = +new Date() - last_exec,\n          args = arguments,\n          exec = function () {\n            last_exec = +new Date();\n            callback.apply(that, args);\n          },\n          clear = function () {\n            timeout_id = undefined;\n          };\n\n      if (debounce_mode && !timeout_id) { exec(); }\n      if (timeout_id) { $timeout.cancel(timeout_id); }\n      if (debounce_mode === undefined && elapsed > delay) {\n        exec();\n      } else if (no_trailing !== true) {\n        timeout_id = $timeout(debounce_mode ? clear : exec, debounce_mode === undefined ? delay - elapsed : delay);\n      }\n    };\n\n    return wrapper;\n  };\n}]);"]}