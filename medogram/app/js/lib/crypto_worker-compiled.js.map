{"version":3,"sources":["crypto_worker.js"],"names":[],"mappings":";;AAAA;;;;;;;AAOA,cACE,aADF,EAEE,cAFF,EAGE,oCAHF,EAIE,sCAJF,EAKE,8BALF,EAME,iCANF,EAOE,6BAPF;;AAUA,YAAY,mBAAU,CAAV,EAAa;AACvB,MAAI,SAAS,EAAE,IAAF,CAAO,MAApB;AAAA,MACE,MADF;;AAGA,UAAQ,EAAE,IAAF,CAAO,IAAf;AACE,SAAK,WAAL;AACE,eAAS,qBAAqB,EAAE,IAAF,CAAO,KAA5B,CAAT;AACA;;AAEF,SAAK,SAAL;AACE,eAAS,YAAY,EAAE,IAAF,CAAO,CAAnB,EAAsB,EAAE,IAAF,CAAO,CAA7B,EAAgC,EAAE,IAAF,CAAO,CAAvC,CAAT;AACA;;AAEF,SAAK,WAAL;AACE,eAAS,aAAa,EAAE,IAAF,CAAO,KAApB,CAAT;AACA;;AAEF,SAAK,aAAL;AACE,eAAS,eAAe,EAAE,IAAF,CAAO,KAAtB,EAA6B,EAAE,IAAF,CAAO,QAApC,EAA8C,EAAE,IAAF,CAAO,OAArD,CAAT;AACA;;AAEF,SAAK,aAAL;AACE,eAAS,eAAe,EAAE,IAAF,CAAO,cAAtB,EAAsC,EAAE,IAAF,CAAO,QAA7C,EAAuD,EAAE,IAAF,CAAO,OAA9D,CAAT;AACA;;AAEF;AACE,YAAM,IAAI,KAAJ,CAAU,mBAAmB,EAAE,IAAF,CAAO,IAApC,CAAN;AAtBJ;;AAyBA,cAAY,EAAC,QAAQ,MAAT,EAAiB,QAAQ,MAAzB,EAAZ;AACD,CA9BD;;AAgCA,YAAY,OAAZ","file":"crypto_worker-compiled.js","sourcesContent":["/*!\n * Webogram v0.5.5 - messaging web application for MTProto\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimportScripts(\n  'polyfill.js',\n  'bin_utils.js',\n  '../../vendor/jsbn/jsbn_combined.js',\n  '../../vendor/leemon_bigint/bigint.js',\n  '../../vendor/closure/long.js',\n  '../../vendor/cryptoJS/crypto.js',\n  '../../vendor/rusha/rusha.js'\n)\n\nonmessage = function (e) {\n  var taskID = e.data.taskID,\n    result\n\n  switch (e.data.task) {\n    case 'factorize':\n      result = pqPrimeFactorization(e.data.bytes)\n      break\n\n    case 'mod-pow':\n      result = bytesModPow(e.data.x, e.data.y, e.data.m)\n      break\n\n    case 'sha1-hash':\n      result = sha1HashSync(e.data.bytes)\n      break\n\n    case 'aes-encrypt':\n      result = aesEncryptSync(e.data.bytes, e.data.keyBytes, e.data.ivBytes)\n      break\n\n    case 'aes-decrypt':\n      result = aesDecryptSync(e.data.encryptedBytes, e.data.keyBytes, e.data.ivBytes)\n      break\n\n    default:\n      throw new Error('Unknown task: ' + e.data.task)\n  }\n\n  postMessage({taskID: taskID, result: result})\n}\n\npostMessage('ready')\n"]}