{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAI,eAAe,EAAnB;AACA,IAAI,OAAO,KAAP,CAAa,UAAjB,EAA6B;AAC3B,eAAa,IAAb,CAAkB,WAAlB;AACD;;AAED;AACA,QAAQ,MAAR,CAAe,OAAf,EAAwB,CACtB,SADsB,EAEtB,YAFsB,EAGtB,SAHsB,EAItB,WAJsB,EAKtB,cALsB,EAMtB,aANsB,EAOtB,SAPsB,EAQtB,eARsB,EAStB,iBATsB,EAUtB,yBAVsB,EAWtB,eAXsB,EAYtB,gBAZsB;AAatB;;;AAGA,kBAhBsB,EAiBtB,mBAjBsB,EAkBtB,MAlBsB,CAkBf,YAlBe,CAAxB,EAkBwB,MAlBxB,CAkB+B,CAAC,mBAAD,EAAsB,gBAAtB,EAAwC,kBAAxC,EAA4D,iBAA5D,EAA+E,UAAU,iBAAV,EAA6B,cAA7B,EAA6C,gBAA7C,EAA+D,eAA/D,EAAgF;AAC5L,mBAAiB,2BAAjB,CAA6C,0EAA7C;AACA,mBAAiB,0BAAjB,CAA4C,6EAA5C;;AAEA;;;;AAIA,MAAI,OAAO,KAAP,CAAa,IAAjB,EAAuB;AACrB,oBAAgB,SAAhB,CAA0B,IAA1B;AACD;;AAED,iBAAe,IAAf,CAAoB,GAApB,EAAyB,EAAC,UAAU,EAAX,EAAe,YAAY,sBAA3B,EAAzB;AACA,iBAAe,IAAf,CAAoB,QAApB,EAA8B,EAAC,aAAa,YAAY,OAAZ,CAAd,EAAoC,YAAY,oBAAhD,EAA9B;AACA,iBAAe,IAAf,CAAoB,KAApB,EAA2B,EAAC,aAAa,YAAY,IAAZ,CAAd,EAAiC,YAAY,iBAA7C,EAAgE,gBAAgB,KAAhF,EAA3B;AACA,iBAAe,SAAf,CAAyB,EAAC,YAAY,GAAb,EAAzB;AACD,CAhB8B,CAlB/B","file":"app-compiled.js","sourcesContent":["/*!\n * Webogram v0.5.5 - messaging web application for MTProto\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n'use strict'\n\nvar extraModules = []\nif (Config.Modes.animations) {\n  extraModules.push('ngAnimate')\n}\n\n// Declare app level module which depends on filters, and services\nangular.module('myApp', [\n  'ngRoute',\n  'ngSanitize',\n  'ngTouch',\n  'ngCookies',\n  'ui.bootstrap',\n  'mediaPlayer',\n  'toaster',\n  'izhukov.utils',\n  'izhukov.mtproto',\n  'izhukov.mtproto.wrapper',\n  'myApp.filters',\n  'myApp.services',\n  /*PRODUCTION_ONLY_BEGIN\n  'myApp.templates',\n  PRODUCTION_ONLY_END*/\n  'myApp.directives',\n  'myApp.controllers'\n].concat(extraModules)).config(['$locationProvider', '$routeProvider', '$compileProvider', 'StorageProvider', function ($locationProvider, $routeProvider, $compileProvider, StorageProvider) {\n  $compileProvider.imgSrcSanitizationWhitelist(/^\\s*(https?|ftp|file|blob|filesystem|chrome-extension|app):|data:image\\//)\n  $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|file|tg|mailto|blob|filesystem|chrome-extension|app):|data:/)\n\n  /*PRODUCTION_ONLY_BEGIN\n  $compileProvider.debugInfoEnabled(false)\n  PRODUCTION_ONLY_END*/\n\n  if (Config.Modes.test) {\n    StorageProvider.setPrefix('t_')\n  }\n\n  $routeProvider.when('/', {template: '', controller: 'AppWelcomeController'})\n  $routeProvider.when('/login', {templateUrl: templateUrl('login'), controller: 'AppLoginController'})\n  $routeProvider.when('/im', {templateUrl: templateUrl('im'), controller: 'AppIMController', reloadOnSearch: false})\n  $routeProvider.otherwise({redirectTo: '/'})\n}])\n"]}