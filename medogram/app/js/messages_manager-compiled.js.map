{"version":3,"sources":["messages_manager.js"],"names":[],"mappings":"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","file":"messages_manager-compiled.js","sourcesContent":["/*!\n * Webogram v0.5.5 - messaging web application for MTProto\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n'use strict'\n\nangular.module('myApp.services')\n\n  .service('AppMessagesManager', function ($q, $rootScope, $location, $filter, $timeout, $sce, ApiUpdatesManager, AppUsersManager, AppChatsManager, AppPeersManager, AppPhotosManager, AppDocsManager, AppStickersManager, AppMessagesIDsManager, DraftsManager, AppWebPagesManager, AppGamesManager, MtpApiManager, MtpApiFileManager, ServerTimeManager, RichTextProcessor, NotificationsManager, Storage, AppProfileManager, TelegramMeWebService, ErrorService, StatusManager, _) {\n    var messagesStorage = {}\n    var messagesForHistory = {}\n    var messagesForDialogs = {}\n    var historiesStorage = {}\n    var dialogsStorage = {count: null, dialogs: []}\n    var pendingByRandomID = {}\n    var pendingByMessageID = {}\n    var pendingAfterMsgs = {}\n    var sendFilePromise = $q.when()\n    var tempID = -1\n\n    var dialogsIndex = SearchIndexManager.createIndex()\n    var cachedResults = {query: false}\n\n    var lastSearchFilter = {}\n    var lastSearchResults = []\n\n    var needSingleMessages = []\n    var fetchSingleMessagesTimeout = false\n\n    var incrementedMessageViews = {}\n    var needIncrementMessageViews = []\n    var incrementMessageViewsTimeout = false\n\n    var maxSeenID = false\n    if (Config.Modes.packed) {\n      Storage.get('max_seen_msg').then(function (maxID) {\n        maxSeenID = maxID || 0\n      })\n    }\n\n    var dateOrTimeFilter = $filter('dateOrTime')\n    var fwdMessagesPluralize = _.pluralize('conversation_forwarded_X_messages')\n    var gameScorePluralize = _.pluralize('conversation_scored_X')\n\n    NotificationsManager.start()\n\n    var allDialogsLoaded = false\n    var dialogsOffsetDate = 0\n    var dialogsNum = 0\n\n    var migratedFromTo = {}\n    var migratedToFrom = {}\n\n    function getConversations (query, offsetIndex, limit) {\n      var curDialogStorage = dialogsStorage\n      var isSearch = angular.isString(query) && query.length\n\n      if (isSearch) {\n        if (!limit || cachedResults.query !== query) {\n          cachedResults.query = query\n\n          var results = SearchIndexManager.search(query, dialogsIndex)\n\n          cachedResults.dialogs = []\n          angular.forEach(dialogsStorage.dialogs, function (dialog) {\n            if (results[dialog.peerID]) {\n              cachedResults.dialogs.push(dialog)\n            }\n          })\n          cachedResults.count = cachedResults.dialogs.length\n        }\n        curDialogStorage = cachedResults\n      } else {\n        cachedResults.query = false\n      }\n\n      var offset = 0\n      if (offsetIndex > 0) {\n        for (offset = 0; offset < curDialogStorage.dialogs.length; offset++) {\n          if (offsetIndex > curDialogStorage.dialogs[offset].index) {\n            break\n          }\n        }\n      }\n\n      limit = limit || 20\n\n      if (\n        isSearch ||\n        allDialogsLoaded ||\n        curDialogStorage.dialogs.length >= offset + limit\n      ) {\n        return $q.when({\n          dialogs: curDialogStorage.dialogs.slice(offset, offset + limit)\n        })\n      }\n\n      return getTopMessages(limit).then(function () {\n        offset = 0\n        if (offsetIndex > 0) {\n          for (offset = 0; offset < curDialogStorage.dialogs.length; offset++) {\n            if (offsetIndex > curDialogStorage.dialogs[offset].index) {\n              break\n            }\n          }\n        }\n        return {\n          dialogs: curDialogStorage.dialogs.slice(offset, offset + limit)\n        }\n      })\n    }\n\n    function getDialogByPeerID (peerID) {\n      for (var i = 0; i < dialogsStorage.dialogs.length; i++) {\n        if (dialogsStorage.dialogs[i].peerID == peerID) {\n          return [dialogsStorage.dialogs[i], i]\n        }\n      }\n\n      return []\n    }\n\n    function saveConversation (dialog) {\n      var peerID = AppPeersManager.getPeerID(dialog.peer)\n      if (!peerID) {\n        return false\n      }\n      var channelID = AppPeersManager.isChannel(peerID) ? -peerID : 0\n      var peerText = AppPeersManager.getPeerSearchText(peerID)\n      SearchIndexManager.indexObject(peerID, peerText, dialogsIndex)\n\n      var isMegagroup = AppPeersManager.isMegagroup(channelID)\n      var mid = AppMessagesIDsManager.getFullMessageID(dialog.top_message, channelID)\n      var message = getMessage(mid)\n      var offsetDate = message.date\n\n      if (!channelID && peerID < 0) {\n        var chat = AppChatsManager.getChat(-peerID)\n        if (chat && chat.migrated_to && chat.pFlags.deactivated) {\n          var migratedToPeer = AppPeersManager.getPeerID(chat.migrated_to)\n          migratedFromTo[peerID] = migratedToPeer\n          migratedToFrom[migratedToPeer] = peerID\n          return\n        }\n      }\n\n      dialog.top_message = mid\n      dialog.read_inbox_max_id = AppMessagesIDsManager.getFullMessageID(dialog.read_inbox_max_id, channelID)\n      dialog.read_outbox_max_id = AppMessagesIDsManager.getFullMessageID(dialog.read_outbox_max_id, channelID)\n\n      var topDate = message.date\n      if (channelID) {\n        var channel = AppChatsManager.getChat(channelID)\n        if (!topDate || channel.date && channel.date > topDate) {\n          topDate = channel.date\n        }\n      }\n      var savedDraft = DraftsManager.saveDraft(peerID, dialog.draft)\n      if (savedDraft && savedDraft.date > topDate) {\n        topDate = savedDraft.date\n      }\n\n      dialog.index = generateDialogIndex(topDate)\n      dialog.peerID = peerID\n\n      pushDialogToStorage(dialog, offsetDate)\n\n      // Because we saved message without dialog present\n      var unreadKey = message.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'\n      if (message.mid && message.mid > dialog[unreadKey]) {\n        message.pFlags.unread = true\n      }\n\n      if (historiesStorage[peerID] === undefined &&\n        !message.deleted) {\n        var historyStorage = {count: null, history: [mid], pending: []}\n        historiesStorage[peerID] = historyStorage\n        if (mergeReplyKeyboard(historyStorage, message)) {\n          $rootScope.$broadcast('history_reply_markup', {peerID: peerID})\n        }\n      }\n\n      NotificationsManager.savePeerSettings(peerID, dialog.notify_settings)\n\n      if (channelID && dialog.pts) {\n        ApiUpdatesManager.addChannelState(channelID, dialog.pts)\n      }\n\n      if (\n        !channelID &&\n        dialog.unread_count > 0 &&\n        maxSeenID &&\n        dialog.top_message > maxSeenID\n      ) {\n        var notifyPeer = message.flags & 16 ? message.from_id : peerID\n        if (message.pFlags.unread &&\n          !message.pFlags.out &&\n          !message.pFlags.silent) {\n          NotificationsManager.getPeerMuted(notifyPeer).then(function (muted) {\n            if (!muted) {\n              notifyAboutMessage(message)\n            }\n          })\n        }\n      }\n    }\n\n    function getTopMessages (limit) {\n      var first = true\n      var dialogs = dialogsStorage.dialogs\n      var offsetDate = 0\n      var offsetID = 0\n      var offsetPeerID = 0\n      var offsetIndex = 0\n      if (dialogsOffsetDate) {\n        offsetDate = dialogsOffsetDate + ServerTimeManager.serverTimeOffset\n        offsetIndex = dialogsOffsetDate * 0x10000\n      }\n      return MtpApiManager.invokeApi('messages.getDialogs', {\n        offset_date: offsetDate,\n        offset_id: AppMessagesIDsManager.getMessageLocalID(offsetID),\n        offset_peer: AppPeersManager.getInputPeerByID(offsetPeerID),\n        limit: limit\n      }, {\n        timeout: 300\n      }).then(function (dialogsResult) {\n        if (!offsetDate) {\n          TelegramMeWebService.setAuthorized(true)\n        }\n\n        AppUsersManager.saveApiUsers(dialogsResult.users)\n        AppChatsManager.saveApiChats(dialogsResult.chats)\n        saveMessages(dialogsResult.messages)\n\n        var maxSeenIdIncremented = offsetDate ? true : false\n        var hasPrepend = false\n        angular.forEach(dialogsResult.dialogs, function (dialog) {\n          saveConversation(dialog)\n          if (offsetIndex && dialog.index > offsetIndex) {\n            newDialogsToHandle[dialog.peerID] = dialog\n            hasPrepend = true\n          }\n\n          if (!maxSeenIdIncremented &&\n            !AppPeersManager.isChannel(AppPeersManager.getPeerID(dialog.peer))) {\n            incrementMaxSeenID(dialog.top_message)\n            maxSeenIdIncremented = true\n          }\n        })\n\n        if (!dialogsResult.dialogs.length ||\n          !dialogsResult.count ||\n          dialogs.length >= dialogsResult.count) {\n          allDialogsLoaded = true\n        }\n\n        if (hasPrepend &&\n            !newDialogsHandlePromise) {\n          newDialogsHandlePromise = $timeout(handleNewDialogs, 0)\n        }\n      })\n    }\n\n    function generateDialogIndex (date) {\n      if (date === undefined) {\n        date = tsNow(true) + ServerTimeManager.serverTimeOffset\n      }\n      return (date * 0x10000) + ((++dialogsNum) & 0xFFFF)\n    }\n\n    function pushDialogToStorage (dialog, offsetDate) {\n      if (offsetDate && (!dialogsOffsetDate || offsetDate < dialogsOffsetDate)) {\n        dialogsOffsetDate = offsetDate\n      }\n      var dialogs = dialogsStorage.dialogs\n      var pos = getDialogByPeerID(dialog.peerID)[1]\n      if (pos !== undefined) {\n        dialogs.splice(pos, 1)\n      }\n\n      var index = dialog.index\n      var i\n      var len = dialogs.length\n      if (!len || index < dialogs[len - 1].index) {\n        dialogs.push(dialog)\n      }\n      else if (index >= dialogs[0].index) {\n        dialogs.unshift(dialog)\n      }else {\n        for (i = 0; i < len; i++) {\n          if (index > dialogs[i].index) {\n            dialogs.splice(i, 0, dialog)\n            break\n          }\n        }\n      }\n    }\n\n    function requestHistory (peerID, maxID, limit, offset) {\n      var isChannel = AppPeersManager.isChannel(peerID)\n      var isMegagroup = isChannel && AppPeersManager.isMegagroup(peerID)\n\n      return MtpApiManager.invokeApi('messages.getHistory', {\n        peer: AppPeersManager.getInputPeerByID(peerID),\n        offset_id: maxID ? AppMessagesIDsManager.getMessageLocalID(maxID) : 0,\n        add_offset: offset || 0,\n        limit: limit || 0\n      }, {\n        timeout: 300,\n        noErrorBox: true\n      }).then(function (historyResult) {\n        AppUsersManager.saveApiUsers(historyResult.users)\n        AppChatsManager.saveApiChats(historyResult.chats)\n        saveMessages(historyResult.messages)\n\n        if (isChannel) {\n          ApiUpdatesManager.addChannelState(-peerID, historyResult.pts)\n        }\n\n        var length = historyResult.messages.length\n        if (length &&\n          historyResult.messages[length - 1].deleted) {\n          historyResult.messages.splice(length - 1, 1)\n          length--\n          historyResult.count--\n        }\n\n        if (\n          peerID < 0 ||\n          !AppUsersManager.isBot(peerID) ||\n          (length == limit && limit < historyResult.count)\n        ) {\n          return historyResult\n        }\n\n        return AppProfileManager.getProfile(peerID).then(function (userFull) {\n          var description = userFull.bot_info && userFull.bot_info.description\n          if (description) {\n            var messageID = tempID--\n            var message = {\n              _: 'messageService',\n              id: messageID,\n              from_id: peerID,\n              to_id: AppPeersManager.getOutputPeer(peerID),\n              flags: 0,\n              pFlags: {},\n              date: tsNow(true) + ServerTimeManager.serverTimeOffset,\n              action: {\n                _: 'messageActionBotIntro',\n                description: description\n              }\n            }\n            saveMessages([message])\n            historyResult.messages.push(message)\n            if (historyResult.count) {\n              historyResult.count++\n            }\n          }\n          return historyResult\n        })\n      }, function (error) {\n        switch (error.type) {\n          case 'CHANNEL_PRIVATE':\n            var channel = AppChatsManager.getChat(-peerID)\n            channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title}\n            ApiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: -peerID\n              }],\n              chats: [channel],\n              users: []\n            })\n            break\n        }\n        return $q.reject(error)\n      })\n    }\n\n    function fillHistoryStorage (peerID, maxID, fullLimit, historyStorage) {\n      // console.log('fill history storage', peerID, maxID, fullLimit, angular.copy(historyStorage))\n      var offset = (migratedFromTo[peerID] && !maxID) ? 1 : 0\n      return requestHistory(peerID, maxID, fullLimit, offset).then(function (historyResult) {\n        historyStorage.count = historyResult.count || historyResult.messages.length\n\n        var offset = 0\n        if (!maxID && historyResult.messages.length) {\n          maxID = historyResult.messages[0].mid + 1\n        }\n        if (maxID > 0) {\n          for (offset = 0; offset < historyStorage.history.length; offset++) {\n            if (maxID > historyStorage.history[offset]) {\n              break\n            }\n          }\n        }\n\n        var wasTotalCount = historyStorage.history.length\n\n        historyStorage.history.splice(offset, historyStorage.history.length - offset)\n        angular.forEach(historyResult.messages, function (message) {\n          if (mergeReplyKeyboard(historyStorage, message)) {\n            $rootScope.$broadcast('history_reply_markup', {peerID: peerID})\n          }\n          historyStorage.history.push(message.mid)\n        })\n\n        var totalCount = historyStorage.history.length\n        fullLimit -= (totalCount - wasTotalCount)\n\n        var migratedNextPeer = migratedFromTo[peerID]\n        var migratedPrevPeer = migratedToFrom[peerID]\n        var isMigrated = migratedNextPeer !== undefined || migratedPrevPeer !== undefined\n\n        if (isMigrated) {\n          historyStorage.count = Math.max(historyStorage.count, totalCount) + 1\n        }\n\n        if (fullLimit > 0) {\n          maxID = historyStorage.history[totalCount - 1]\n          if (isMigrated) {\n            if (!historyResult.messages.length) {\n              if (migratedPrevPeer) {\n                maxID = 0\n                peerID = migratedPrevPeer\n              } else {\n                historyStorage.count = totalCount\n                return true\n              }\n            }\n            return fillHistoryStorage(peerID, maxID, fullLimit, historyStorage)\n          }\n          else if (totalCount < historyStorage.count) {\n            return fillHistoryStorage(peerID, maxID, fullLimit, historyStorage)\n          }\n        }\n        return true\n      })\n    }\n\n    function wrapHistoryResult (peerID, result) {\n      var unreadOffset = result.unreadOffset\n      if (unreadOffset) {\n        var i\n        var message\n        for (i = result.history.length - 1; i >= 0; i--) {\n          message = messagesStorage[result.history[i]]\n          if (message && !message.pFlags.out && message.pFlags.unread) {\n            result.unreadOffset = i + 1\n            break\n          }\n        }\n      }\n      return $q.when(result)\n    }\n\n    function migrateChecks (migrateFrom, migrateTo) {\n      if (!migratedFromTo[migrateFrom] &&\n        !migratedToFrom[migrateTo] &&\n        AppChatsManager.hasChat(-migrateTo)) {\n        var fromChat = AppChatsManager.getChat(-migrateFrom)\n        if (fromChat &&\n          fromChat.migrated_to &&\n          fromChat.migrated_to.channel_id == -migrateTo) {\n          migratedFromTo[migrateFrom] = migrateTo\n          migratedToFrom[migrateTo] = migrateFrom\n\n          $timeout(function () {\n            var foundDialog = getDialogByPeerID(migrateFrom)\n            if (foundDialog.length) {\n              dialogsStorage.dialogs.splice(foundDialog[1], 1)\n              $rootScope.$broadcast('dialog_drop', {peerID: migrateFrom})\n            }\n            $rootScope.$broadcast('dialog_migrate', {migrateFrom: migrateFrom, migrateTo: migrateTo})\n          }, 100)\n        }\n      }\n    }\n\n    function convertMigratedPeer (peerID) {\n      if (migratedFromTo[peerID]) {\n        return migratedFromTo[peerID]\n      }\n    }\n\n    function getHistory (peerID, maxID, limit, backLimit, prerendered) {\n      if (migratedFromTo[peerID]) {\n        peerID = migratedFromTo[peerID]\n      }\n      var historyStorage = historiesStorage[peerID]\n      var offset = 0\n      var offsetNotFound = false\n      var unreadOffset = false\n      var unreadSkip = false\n\n      prerendered = prerendered ? Math.min(50, prerendered) : 0\n\n      if (historyStorage === undefined) {\n        historyStorage = historiesStorage[peerID] = {count: null, history: [], pending: []}\n      }\n\n      var isMigrated = false\n      var reqPeerID = peerID\n      if (migratedToFrom[peerID]) {\n        isMigrated = true\n        if (maxID && maxID < AppMessagesIDsManager.fullMsgIDModulus) {\n          reqPeerID = migratedToFrom[peerID]\n        }\n      }\n\n      if (!limit && !maxID) {\n        var foundDialog = getDialogByPeerID(peerID)[0]\n        if (foundDialog && foundDialog.unread_count > 1) {\n          var unreadCount = foundDialog.unread_count\n          if (unreadSkip = (unreadCount > 50)) {\n            if (foundDialog.read_inbox_max_id) {\n              maxID = foundDialog.read_inbox_max_id\n              backLimit = 16\n              unreadOffset = 16\n              limit = 4\n            } else {\n              limit = 20\n              unreadOffset = 16\n              offset = unreadCount - unreadOffset\n            }\n          } else {\n            limit = Math.max(10, prerendered, unreadCount + 2)\n            unreadOffset = unreadCount\n          }\n        }\n        else if (Config.Mobile) {\n          limit = 20\n        }\n      }\n      if (maxID > 0) {\n        offsetNotFound = true\n        for (offset = 0; offset < historyStorage.history.length; offset++) {\n          if (maxID > historyStorage.history[offset]) {\n            offsetNotFound = false\n            break\n          }\n        }\n      }\n\n      if (!offsetNotFound && (\n        historyStorage.count !== null && historyStorage.history.length == historyStorage.count ||\n        historyStorage.history.length >= offset + (limit || 1)\n        )) {\n        if (backLimit) {\n          backLimit = Math.min(offset, backLimit)\n          offset = Math.max(0, offset - backLimit)\n          limit += backLimit\n        } else {\n          limit = limit || (offset ? 20 : (prerendered || 5))\n        }\n        var history = historyStorage.history.slice(offset, offset + limit)\n        if (!maxID && historyStorage.pending.length) {\n          history = historyStorage.pending.slice().concat(history)\n        }\n        return wrapHistoryResult(peerID, {\n          count: historyStorage.count,\n          history: history,\n          unreadOffset: unreadOffset,\n          unreadSkip: unreadSkip\n        })\n      }\n\n      if (!backLimit && !limit) {\n        limit = prerendered || 20\n      }\n      if (offsetNotFound) {\n        offset = 0\n      }\n      if (backLimit || unreadSkip || maxID && historyStorage.history.indexOf(maxID) == -1) {\n        if (backLimit) {\n          offset = -backLimit\n          limit += backLimit\n        }\n        return requestHistory(reqPeerID, maxID, limit, offset).then(function (historyResult) {\n          historyStorage.count = historyResult.count || historyResult.messages.length\n          if (isMigrated) {\n            historyStorage.count++\n          }\n\n          var history = []\n          angular.forEach(historyResult.messages, function (message) {\n            history.push(message.mid)\n          })\n          if (!maxID && historyStorage.pending.length) {\n            history = historyStorage.pending.slice().concat(history)\n          }\n\n          return wrapHistoryResult(peerID, {\n            count: historyStorage.count,\n            history: history,\n            unreadOffset: unreadOffset,\n            unreadSkip: unreadSkip\n          })\n        })\n      }\n\n      return fillHistoryStorage(peerID, maxID, limit, historyStorage).then(function () {\n        offset = 0\n        if (maxID > 0) {\n          for (offset = 0; offset < historyStorage.history.length; offset++) {\n            if (maxID > historyStorage.history[offset]) {\n              break\n            }\n          }\n        }\n\n        var history = historyStorage.history.slice(offset, offset + limit)\n        if (!maxID && historyStorage.pending.length) {\n          history = historyStorage.pending.slice().concat(history)\n        }\n\n        return wrapHistoryResult(peerID, {\n          count: historyStorage.count,\n          history: history,\n          unreadOffset: unreadOffset,\n          unreadSkip: unreadSkip\n        })\n      })\n    }\n\n    function getReplyKeyboard (peerID) {\n      return (historiesStorage[peerID] || {}).reply_markup || false\n    }\n\n    function mergeReplyKeyboard (historyStorage, message) {\n      // console.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n      if (!message.reply_markup &&\n        !message.pFlags.out &&\n        !message.action) {\n        return false\n      }\n      if (message.reply_markup &&\n        message.reply_markup._ == 'replyInlineMarkup') {\n        return false\n      }\n      var messageReplyMarkup = message.reply_markup\n      var lastReplyMarkup = historyStorage.reply_markup\n      if (messageReplyMarkup) {\n        if (lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n          return false\n        }\n        if (messageReplyMarkup.pFlags.selective &&\n          !(message.flags & 16)) {\n          return false\n        }\n        if (historyStorage.maxOutID &&\n          message.mid < historyStorage.maxOutID &&\n          messageReplyMarkup.pFlags.single_use) {\n          messageReplyMarkup.pFlags.hidden = true\n        }\n        messageReplyMarkup = angular.extend({\n          mid: message.mid\n        }, messageReplyMarkup)\n        if (messageReplyMarkup._ != 'replyKeyboardHide') {\n          messageReplyMarkup.fromID = message.from_id\n        }\n        historyStorage.reply_markup = messageReplyMarkup\n        // console.log('set', historyStorage.reply_markup)\n        return true\n      }\n\n      if (message.pFlags.out) {\n        if (lastReplyMarkup) {\n          if (lastReplyMarkup.pFlags.single_use &&\n            !lastReplyMarkup.pFlags.hidden &&\n            (message.mid > lastReplyMarkup.mid || message.mid < 0) &&\n            message.message) {\n            lastReplyMarkup.pFlags.hidden = true\n            // console.log('set', historyStorage.reply_markup)\n            return true\n          }\n        } else if (!historyStorage.maxOutID ||\n          message.mid > historyStorage.maxOutID) {\n          historyStorage.maxOutID = message.mid\n        }\n      }\n\n      if (message.action &&\n        message.action._ == 'messageActionChatDeleteUser' &&\n        (lastReplyMarkup\n          ? message.action.user_id == lastReplyMarkup.fromID\n          : AppUsersManager.isBot(message.action.user_id)\n        )\n      ) {\n        historyStorage.reply_markup = {\n          _: 'replyKeyboardHide',\n          mid: message.mid,\n          flags: 0,\n          pFlags: {}\n        }\n        // console.log('set', historyStorage.reply_markup)\n        return true\n      }\n\n      return false\n    }\n\n    function getSearch (peerID, query, inputFilter, maxID, limit) {\n      peerID = peerID ? parseInt(peerID) : 0\n      var foundMsgs = []\n      var useSearchCache = !query\n      var newSearchFilter = {peer: peerID, filter: inputFilter}\n      var sameSearchCache = useSearchCache && angular.equals(lastSearchFilter, newSearchFilter)\n\n      if (useSearchCache && !sameSearchCache) {\n        // console.warn(dT(), 'new search filter', lastSearchFilter, newSearchFilter)\n        lastSearchFilter = newSearchFilter\n        lastSearchResults = []\n      }\n\n      // console.log(dT(), 'search', useSearchCache, sameSearchCache, lastSearchResults, maxID)\n\n      if (peerID && !maxID && !query) {\n        var historyStorage = historiesStorage[peerID]\n\n        if (historyStorage !== undefined && historyStorage.history.length) {\n          var neededContents = {},\n            neededDocType\n          var neededLimit = limit || 20,\n            i\n          var message\n\n          switch (inputFilter._) {\n            case 'inputMessagesFilterPhotos':\n              neededContents['messageMediaPhoto'] = true\n              break\n\n            case 'inputMessagesFilterPhotoVideo':\n              neededContents['messageMediaPhoto'] = true\n              neededContents['messageMediaDocument'] = true\n              neededDocType = 'video'\n              break\n\n            case 'inputMessagesFilterVideo':\n              neededContents['messageMediaDocument'] = true\n              neededDocType = 'video'\n              break\n\n            case 'inputMessagesFilterDocument':\n              neededContents['messageMediaDocument'] = true\n              neededDocType = false\n              break\n\n            case 'inputMessagesFilterVoice':\n              neededContents['messageMediaDocument'] = true\n              neededDocType = 'voice'\n              break\n          }\n          for (i = 0; i < historyStorage.history.length; i++) {\n            message = messagesStorage[historyStorage.history[i]]\n            if (message.media && neededContents[message.media._]) {\n              if (neededDocType !== undefined &&\n                  message.media._ == 'messageMediaDocument' &&\n                  message.media.document.type != neededDocType) {\n                continue\n              }\n              foundMsgs.push(message.mid)\n              if (foundMsgs.length >= neededLimit) {\n                break\n              }\n            }\n          }\n        }\n\n        // console.warn(dT(), 'before append', foundMsgs)\n        if (foundMsgs.length < neededLimit && lastSearchResults.length && sameSearchCache) {\n          var minID = foundMsgs.length ? foundMsgs[foundMsgs.length - 1] : false\n          for (var i = 0; i < lastSearchResults.length; i++) {\n            if (minID === false || lastSearchResults[i] < minID) {\n              foundMsgs.push(lastSearchResults[i])\n              if (foundMsgs.length >= neededLimit) {\n                break\n              }\n            }\n          }\n        }\n        // console.warn(dT(), 'after append', foundMsgs)\n      }\n\n      if (foundMsgs.length || limit == 1000) {\n        if (useSearchCache) {\n          lastSearchResults = listMergeSorted(lastSearchResults, foundMsgs)\n        }\n\n        return $q.when({\n          count: null,\n          history: foundMsgs\n        })\n      }\n\n      var apiPromise\n\n      if (peerID || !query) {\n        apiPromise = MtpApiManager.invokeApi('messages.search', {\n          flags: 0,\n          peer: AppPeersManager.getInputPeerByID(peerID),\n          q: query || '',\n          filter: inputFilter || {_: 'inputMessagesFilterEmpty'},\n          min_date: 0,\n          max_date: 0,\n          limit: limit || 20,\n          max_id: AppMessagesIDsManager.getMessageLocalID(maxID) || 0\n        }, {\n          timeout: 300,\n          noErrorBox: true\n        })\n      } else {\n        var offsetDate = 0\n        var offsetPeerID = 0\n        var offsetID = 0\n        var offsetMessage = maxID && getMessage(maxID)\n\n        if (offsetMessage && offsetMessage.date) {\n          offsetDate = offsetMessage.date + ServerTimeManager.serverTimeOffset\n          offsetID = offsetMessage.id\n          offsetPeerID = getMessagePeer(offsetMessage)\n        }\n        apiPromise = MtpApiManager.invokeApi('messages.searchGlobal', {\n          q: query,\n          offset_date: offsetDate,\n          offset_peer: AppPeersManager.getInputPeerByID(offsetPeerID),\n          offset_id: AppMessagesIDsManager.getMessageLocalID(offsetID),\n          limit: limit || 20\n        }, {\n          timeout: 300,\n          noErrorBox: true\n        })\n      }\n\n      return apiPromise.then(function (searchResult) {\n        AppUsersManager.saveApiUsers(searchResult.users)\n        AppChatsManager.saveApiChats(searchResult.chats)\n        saveMessages(searchResult.messages)\n\n        var foundCount = searchResult.count || searchResult.messages.length\n\n        foundMsgs = []\n        angular.forEach(searchResult.messages, function (message) {\n          var peerID = getMessagePeer(message)\n          if (peerID < 0) {\n            var chat = AppChatsManager.getChat(-peerID)\n            if (chat.migrated_to) {\n              migrateChecks(peerID, -chat.migrated_to.channel_id)\n            }\n          }\n          foundMsgs.push(message.mid)\n        })\n\n        if (useSearchCache &&\n            (!maxID || sameSearchCache && lastSearchResults.indexOf(maxID) >= 0)) {\n          lastSearchResults = listMergeSorted(lastSearchResults, foundMsgs)\n        }\n        // console.log(dT(), 'after API', foundMsgs, lastSearchResults)\n\n        return {\n          count: foundCount,\n          history: foundMsgs\n        }\n      }, function (error) {\n        if (error.code == 400) {\n          error.handled = true\n        }\n        return $q.reject(error)\n      })\n    }\n\n    function getMessage (messageID) {\n      return messagesStorage[messageID] || {deleted: true}\n    }\n\n    function deleteMessages (messageIDs) {\n      var splitted = AppMessagesIDsManager.splitMessageIDsByChannels(messageIDs)\n      var promises = []\n      angular.forEach(splitted.msgIDs, function (msgIDs, channelID) {\n        var promise\n        if (channelID > 0) {\n          var channel = AppChatsManager.getChat(channelID)\n          if (!channel.pFlags.creator && !(channel.pFlags.editor && channel.pFlags.megagroup)) {\n            var goodMsgIDs = []\n            if (channel.pFlags.editor || channel.pFlags.megagroup) {\n              angular.forEach(msgIDs, function (msgID, i) {\n                var message = getMessage(splitted.mids[channelID][i])\n                if (message.pFlags.out) {\n                  goodMsgIDs.push(msgID)\n                }\n              })\n            }\n            if (!goodMsgIDs.length) {\n              return\n            }\n            msgIDs = goodMsgIDs\n          }\n          promise = MtpApiManager.invokeApi('channels.deleteMessages', {\n            channel: AppChatsManager.getChannelInput(channelID),\n            id: msgIDs\n          }).then(function (affectedMessages) {\n            ApiUpdatesManager.processUpdateMessage({\n              _: 'updateShort',\n              update: {\n                _: 'updateDeleteChannelMessages',\n                channel_id: channelID,\n                messages: msgIDs,\n                pts: affectedMessages.pts,\n                pts_count: affectedMessages.pts_count\n              }\n            })\n          })\n        } else {\n          promise = MtpApiManager.invokeApi('messages.deleteMessages', {\n            id: msgIDs\n          }).then(function (affectedMessages) {\n            ApiUpdatesManager.processUpdateMessage({\n              _: 'updateShort',\n              update: {\n                _: 'updateDeleteMessages',\n                messages: msgIDs,\n                pts: affectedMessages.pts,\n                pts_count: affectedMessages.pts_count\n              }\n            })\n          })\n        }\n        promises.push(promise)\n      })\n\n      return $q.all(promises)\n    }\n\n    function getMessageShareLink (fullMsgID) {\n      var info = AppMessagesIDsManager.getMessageIDInfo(fullMsgID)\n      var msgID = info[0]\n      var channelID = info[1]\n      if (!channelID) {\n        return $q.reject()\n      }\n      var message = getMessage(fullMsgID)\n      var channel = AppChatsManager.getChat(channelID)\n      if (!message ||\n          !message.pFlags ||\n          !message.pFlags.post ||\n          !channel.username) {\n        return $q.reject()\n      }\n      return MtpApiManager.invokeApi('channels.exportMessageLink', {\n        channel: AppChatsManager.getChannelInput(channelID),\n        id: msgID\n      }).then(function (exportedMessageLink) {\n        return exportedMessageLink.link\n      })\n    }\n\n    function readHistory (peerID) {\n      // console.trace('start read')\n      var isChannel = AppPeersManager.isChannel(peerID)\n      var historyStorage = historiesStorage[peerID]\n      var foundDialog = getDialogByPeerID(peerID)[0]\n\n      if (!foundDialog || !foundDialog.unread_count) {\n        if (!historyStorage || !historyStorage.history.length) {\n          return false\n        }\n\n        var messageID,\n          message\n        var foundUnread = false\n        for (i = historyStorage.history.length; i >= 0; i--) {\n          messageID = historyStorage.history[i]\n          message = messagesStorage[messageID]\n          if (message && !message.pFlags.out && message.pFlags.unread) {\n            foundUnread = true\n            break\n          }\n        }\n        if (!foundUnread) {\n          return false\n        }\n      }\n\n      if (historyStorage.readPromise) {\n        return historyStorage.readPromise\n      }\n\n      var apiPromise\n      if (isChannel) {\n        apiPromise = MtpApiManager.invokeApi('channels.readHistory', {\n          channel: AppChatsManager.getChannelInput(-peerID),\n          max_id: 0\n        })\n      } else {\n        apiPromise = MtpApiManager.invokeApi('messages.readHistory', {\n          peer: AppPeersManager.getInputPeerByID(peerID),\n          max_id: 0\n        }).then(function (affectedMessages) {\n          ApiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          })\n        })\n      }\n\n      historyStorage.readPromise = apiPromise.then(function () {\n        if (foundDialog) {\n          // console.log('done read history', peerID)\n          foundDialog.unread_count = 0\n          $rootScope.$broadcast('dialog_unread', {peerID: peerID, count: 0})\n          $rootScope.$broadcast('messages_read')\n          if (historyStorage && historyStorage.history.length) {\n            foundDialog.read_inbox_max_id = historyStorage.history[0]\n          }\n        }\n      })['finally'](function () {\n        delete historyStorage.readPromise\n      })\n\n      if (historyStorage && historyStorage.history.length) {\n        var messageID\n        var message, i\n        var peerID, foundDialog\n        var dialog\n        for (i = 0; i < historyStorage.history.length; i++) {\n          messageID = historyStorage.history[i]\n          message = messagesStorage[messageID]\n          if (message && !message.pFlags.out) {\n            message.pFlags.unread = false\n            if (messagesForHistory[messageID]) {\n              messagesForHistory[messageID].pFlags.unread = false\n            }\n            if (messagesForDialogs[messageID]) {\n              messagesForDialogs[messageID].pFlags.unread = false\n            }\n            NotificationsManager.cancel('msg' + messageID)\n          }\n        }\n      }\n\n      NotificationsManager.soundReset(AppPeersManager.getPeerString(peerID))\n\n      return historyStorage.readPromise\n    }\n\n    function readMessages (messageIDs) {\n      MtpApiManager.invokeApi('messages.readMessageContents', {\n        id: messageIDs\n      }).then(function (affectedMessages) {\n        ApiUpdatesManager.processUpdateMessage({\n          _: 'updateShort',\n          update: {\n            _: 'updateReadMessagesContents',\n            messages: messageIDs,\n            pts: affectedMessages.pts,\n            pts_count: affectedMessages.pts_count\n          }\n        })\n      })\n    }\n\n    function doFlushHistory (inputPeer, justClear) {\n      var flags = 0\n      if (justClear) {\n        flags |= 1\n      }\n      return MtpApiManager.invokeApi('messages.deleteHistory', {\n        flags: flags,\n        peer: inputPeer,\n        max_id: 0\n      }).then(function (affectedHistory) {\n        ApiUpdatesManager.processUpdateMessage({\n          _: 'updateShort',\n          update: {\n            _: 'updatePts',\n            pts: affectedHistory.pts,\n            pts_count: affectedHistory.pts_count\n          }\n        })\n        if (!affectedHistory.offset) {\n          return true\n        }\n        return doFlushHistory(inputPeer, justClear)\n      })\n    }\n\n    function flushHistory (peerID, justClear) {\n      return doFlushHistory(AppPeersManager.getInputPeerByID(peerID), justClear).then(function () {\n        if (justClear) {\n          $rootScope.$broadcast('dialog_flush', {peerID: peerID})\n        } else {\n          var foundDialog = getDialogByPeerID(peerID)\n          if (foundDialog[0]) {\n            dialogsStorage.dialogs.splice(foundDialog[1], 1)\n          }\n          delete historiesStorage[peerID]\n          $rootScope.$broadcast('dialog_drop', {peerID: peerID})\n        }\n      })\n    }\n\n    function saveMessages (apiMessages, options) {\n      options = options || {}\n      angular.forEach(apiMessages, function (apiMessage) {\n        if (apiMessage.pFlags === undefined) {\n          apiMessage.pFlags = {}\n        }\n        if (!apiMessage.pFlags.out) {\n          apiMessage.pFlags.out = false\n        }\n        if (!apiMessage.pFlags.unread) {\n          apiMessage.pFlags.unread = false\n        }\n        if (apiMessage._ == 'messageEmpty') {\n          return\n        }\n\n        var peerID = getMessagePeer(apiMessage)\n        var isChannel = apiMessage.to_id._ == 'peerChannel'\n        var channelID = isChannel ? -peerID : 0\n        var isBroadcast = isChannel && !AppChatsManager.isMegagroup(channelID)\n\n        var mid = AppMessagesIDsManager.getFullMessageID(apiMessage.id, channelID)\n        apiMessage.mid = mid\n\n        var dialog = getDialogByPeerID(peerID)[0]\n        if (dialog && mid > 0) {\n          var dialogKey = apiMessage.pFlags.out\n            ? 'read_outbox_max_id'\n            : 'read_inbox_max_id'\n\n          apiMessage.pFlags.unread = mid > dialog[dialogKey]\n        }\n        else if (options.isNew) {\n          apiMessage.pFlags.unread = true\n        }\n        // console.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n        if (apiMessage.reply_to_msg_id) {\n          apiMessage.reply_to_mid = AppMessagesIDsManager.getFullMessageID(apiMessage.reply_to_msg_id, channelID)\n        }\n\n        apiMessage.date -= ServerTimeManager.serverTimeOffset\n\n        var fwdHeader = apiMessage.fwd_from\n        if (fwdHeader) {\n          apiMessage.fwdFromID = fwdHeader.channel_id ? -fwdHeader.channel_id : fwdHeader.from_id\n          fwdHeader.date -= ServerTimeManager.serverTimeOffset\n        }\n\n        apiMessage.peerID = peerID\n        apiMessage.fromID = apiMessage.pFlags.post ? peerID : apiMessage.from_id\n        apiMessage.signID = apiMessage.pFlags.post && apiMessage.from_id ||\n          fwdHeader && fwdHeader.channel_id && fwdHeader.from_id\n\n        if (apiMessage.via_bot_id > 0) {\n          apiMessage.viaBotID = apiMessage.via_bot_id\n        }\n\n        var mediaContext = {\n          user_id: apiMessage.fromID,\n          date: apiMessage.date\n        }\n\n        if (apiMessage.media) {\n          switch (apiMessage.media._) {\n            case 'messageMediaEmpty':\n              delete apiMessage.media\n              break\n            case 'messageMediaPhoto':\n              AppPhotosManager.savePhoto(apiMessage.media.photo, mediaContext)\n              break\n            case 'messageMediaDocument':\n              AppDocsManager.saveDoc(apiMessage.media.document, mediaContext)\n              break\n            case 'messageMediaWebPage':\n              AppWebPagesManager.saveWebPage(apiMessage.media.webpage, apiMessage.mid, mediaContext)\n              break\n            case 'messageMediaGame':\n              AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext)\n              apiMessage.media.handleMessage = true\n              break\n          }\n        }\n        if (apiMessage.action) {\n          var migrateFrom\n          var migrateTo\n          switch (apiMessage.action._) {\n            case 'messageActionChatEditPhoto':\n              AppPhotosManager.savePhoto(apiMessage.action.photo, mediaContext)\n              if (isBroadcast) {\n                apiMessage.action._ = 'messageActionChannelEditPhoto'\n              }\n              break\n\n            case 'messageActionChatEditTitle':\n              if (isBroadcast) {\n                apiMessage.action._ = 'messageActionChannelEditTitle'\n              }\n              break\n\n            case 'messageActionChatDeletePhoto':\n              if (isBroadcast) {\n                apiMessage.action._ = 'messageActionChannelDeletePhoto'\n              }\n              break\n\n            case 'messageActionChatAddUser':\n              if (apiMessage.action.users.length == 1) {\n                apiMessage.action.user_id = apiMessage.action.users[0]\n                if (apiMessage.fromID == apiMessage.action.user_id) {\n                  if (isChannel) {\n                    apiMessage.action._ = 'messageActionChatJoined'\n                  } else {\n                    apiMessage.action._ = 'messageActionChatReturn'\n                  }\n                }\n              }\n              else if (apiMessage.action.users.length > 1) {\n                apiMessage.action._ = 'messageActionChatAddUsers'\n              }\n              break\n\n            case 'messageActionChatDeleteUser':\n              if (apiMessage.fromID == apiMessage.action.user_id) {\n                apiMessage.action._ = 'messageActionChatLeave'\n              }\n              break\n\n            case 'messageActionChannelMigrateFrom':\n              migrateFrom = -apiMessage.action.chat_id\n              migrateTo = -channelID\n              break\n\n            case 'messageActionChatMigrateTo':\n              migrateFrom = -channelID\n              migrateTo = -apiMessage.action.channel_id\n              break\n\n            case 'messageActionHistoryClear':\n              apiMessage.deleted = true\n              apiMessage.clear_history = true\n              apiMessage.pFlags.out = false\n              apiMessage.pFlags.unread = false\n              break\n          }\n          if (migrateFrom &&\n            migrateTo &&\n            !migratedFromTo[migrateFrom] &&\n            !migratedToFrom[migrateTo]) {\n            migrateChecks(migrateFrom, migrateTo)\n          }\n        }\n\n        if (apiMessage.message && apiMessage.message.length) {\n          var myEntities = RichTextProcessor.parseEntities(apiMessage.message)\n          var apiEntities = apiMessage.entities || []\n          apiMessage.totalEntities = RichTextProcessor.mergeEntities(myEntities, apiEntities, !apiMessage.pending)\n        }\n\n        if (!options.isEdited) {\n          messagesStorage[mid] = apiMessage\n        }\n      })\n    }\n\n    function sendText (peerID, text, options) {\n      if (!angular.isString(text)) {\n        return\n      }\n      options = options || {}\n      var entities = options.entities || []\n      if (!options.viaBotID) {\n        text = RichTextProcessor.parseMarkdown(text, entities)\n      }\n      if (!text.length) {\n        return\n      }\n\n      var sendEntites = entities\n      if (entities.length) {\n        sendEntites = angular.copy(entities)\n        angular.forEach(sendEntites, function (entity) {\n          if (entity._ == 'messageEntityMentionName') {\n            entity._ = 'inputMessageEntityMentionName'\n            entity.user_id = AppUsersManager.getUserInput(entity.user_id)\n          }\n        })\n      }\n\n\n      var messageID = tempID--\n      var randomID = [nextRandomInt(0xFFFFFFFF), nextRandomInt(0xFFFFFFFF)]\n      var randomIDS = bigint(randomID[0]).shiftLeft(32).add(bigint(randomID[1])).toString()\n      var historyStorage = historiesStorage[peerID]\n      var flags = 0\n      var pFlags = {}\n      var replyToMsgID = options.replyToMsgID\n      var isChannel = AppPeersManager.isChannel(peerID)\n      var isMegagroup = isChannel && AppPeersManager.isMegagroup(peerID)\n      var asChannel = isChannel && !isMegagroup ? true : false\n      var message\n\n      if (historyStorage === undefined) {\n        historyStorage = historiesStorage[peerID] = {count: null, history: [], pending: []}\n      }\n\n      var fromID = AppUsersManager.getSelf().id\n      if (peerID != fromID) {\n        flags |= 2\n        pFlags.out = true\n        if (!isChannel && !AppUsersManager.isBot(peerID)) {\n          flags |= 1\n          pFlags.unread = true\n        }\n      }\n      if (replyToMsgID) {\n        flags |= 8\n      }\n      if (asChannel) {\n        fromID = 0\n        pFlags.post = true\n      } else {\n        flags |= 256\n      }\n      message = {\n        _: 'message',\n        id: messageID,\n        from_id: fromID,\n        to_id: AppPeersManager.getOutputPeer(peerID),\n        flags: flags,\n        pFlags: pFlags,\n        date: tsNow(true) + ServerTimeManager.serverTimeOffset,\n        message: text,\n        random_id: randomIDS,\n        reply_to_msg_id: replyToMsgID,\n        via_bot_id: options.viaBotID,\n        reply_markup: options.reply_markup,\n        entities: entities,\n        views: asChannel && 1,\n        pending: true\n      }\n\n      var toggleError = function (on) {\n        var historyMessage = messagesForHistory[messageID]\n        if (on) {\n          message.error = true\n          if (historyMessage) {\n            historyMessage.error = true\n          }\n        } else {\n          delete message.error\n          if (historyMessage) {\n            delete historyMessage.error\n          }\n        }\n        $rootScope.$broadcast('messages_pending')\n      }\n\n      message.send = function () {\n        toggleError(false)\n        var sentRequestOptions = {}\n        if (pendingAfterMsgs[peerID]) {\n          sentRequestOptions.afterMessageID = pendingAfterMsgs[peerID].messageID\n        }\n        var flags = 0\n        if (replyToMsgID) {\n          flags |= 1\n        }\n        if (asChannel) {\n          flags |= 16\n        }\n        if (options.clearDraft) {\n          flags |= 128\n        }\n        var apiPromise\n        if (options.viaBotID) {\n          apiPromise = MtpApiManager.invokeApi('messages.sendInlineBotResult', {\n            flags: flags,\n            peer: AppPeersManager.getInputPeerByID(peerID),\n            random_id: randomID,\n            reply_to_msg_id: AppMessagesIDsManager.getMessageLocalID(replyToMsgID),\n            query_id: options.queryID,\n            id: options.resultID\n          }, sentRequestOptions)\n        } else {\n          if (sendEntites.length) {\n            flags |= 8\n          }\n          apiPromise = MtpApiManager.invokeApi('messages.sendMessage', {\n            flags: flags,\n            peer: AppPeersManager.getInputPeerByID(peerID),\n            message: text,\n            random_id: randomID,\n            reply_to_msg_id: AppMessagesIDsManager.getMessageLocalID(replyToMsgID),\n            entities: sendEntites\n          }, sentRequestOptions)\n        }\n        // console.log(flags, entities)\n        apiPromise.then(function (updates) {\n          if (updates._ == 'updateShortSentMessage') {\n            message.flags = updates.flags\n            message.date = updates.date\n            message.id = updates.id\n            message.media = updates.media\n            message.entities = updates.entities\n            updates = {\n              _: 'updates',\n              users: [],\n              chats: [],\n              seq: 0,\n              updates: [{\n                _: 'updateMessageID',\n                random_id: randomIDS,\n                id: updates.id\n              }, {\n                _: isChannel ? 'updateNewChannelMessage' : 'updateNewMessage',\n                message: message,\n                pts: updates.pts,\n                pts_count: updates.pts_count\n              }]\n            }\n          }\n          else if (updates.updates) {\n            angular.forEach(updates.updates, function (update) {\n              if (update._ == 'updateDraftMessage') {\n                update.local = true\n              }\n            })\n          }\n          ApiUpdatesManager.processUpdateMessage(updates)\n        }, function (error) {\n          toggleError(true)\n        })['finally'](function () {\n          if (pendingAfterMsgs[peerID] === sentRequestOptions) {\n            delete pendingAfterMsgs[peerID]\n          }\n        })\n\n        pendingAfterMsgs[peerID] = sentRequestOptions\n      }\n\n      saveMessages([message])\n      historyStorage.pending.unshift(messageID)\n      $rootScope.$broadcast('history_append', {peerID: peerID, messageID: messageID, my: true})\n\n      setZeroTimeout(message.send)\n      // setTimeout(function () {\n      //   message.send()\n      // }, 5000)\n\n      if (options.clearDraft) {\n        DraftsManager.clearDraft(peerID)\n      }\n\n      pendingByRandomID[randomIDS] = [peerID, messageID]\n    }\n\n    function sendFile (peerID, file, options) {\n      options = options || {}\n      var messageID = tempID--\n      var randomID = [nextRandomInt(0xFFFFFFFF), nextRandomInt(0xFFFFFFFF)]\n      var randomIDS = bigint(randomID[0]).shiftLeft(32).add(bigint(randomID[1])).toString()\n      var historyStorage = historiesStorage[peerID]\n      var flags = 0\n      var pFlags = {}\n      var replyToMsgID = options.replyToMsgID\n      var isChannel = AppPeersManager.isChannel(peerID)\n      var isMegagroup = isChannel && AppPeersManager.isMegagroup(peerID)\n      var asChannel = isChannel && !isMegagroup ? true : false\n      var attachType, apiFileName\n      var realFileName\n\n      if (!options.isMedia) {\n        attachType = 'document'\n        apiFileName = 'document.' + file.type.split('/')[1]\n      } else if (['image/jpeg', 'image/png', 'image/bmp'].indexOf(file.type) >= 0) {\n        attachType = 'photo'\n        apiFileName = 'photo.' + file.type.split('/')[1]\n      } else if (file.type.substr(0, 6) == 'audio/' || ['video/ogg'].indexOf(file.type) >= 0) {\n        attachType = 'audio'\n        apiFileName = 'audio.' + (file.type.split('/')[1] == 'ogg' ? 'ogg' : 'mp3')\n      } else if (file.type.substr(0, 6) == 'video/') {\n        attachType = 'video'\n        apiFileName = 'video.mp4'\n      } else {\n        attachType = 'document'\n        apiFileName = 'document.' + file.type.split('/')[1]\n      }\n\n      // console.log(attachType, apiFileName, file.type)\n\n      if (historyStorage === undefined) {\n        historyStorage = historiesStorage[peerID] = {count: null, history: [], pending: []}\n      }\n\n      var fromID = AppUsersManager.getSelf().id\n      if (peerID != fromID) {\n        flags |= 2\n        pFlags.out = true\n        if (!isChannel && !AppUsersManager.isBot(peerID)) {\n          flags |= 1\n          pFlags.unread = true\n        }\n      }\n      if (replyToMsgID) {\n        flags |= 8\n      }\n      if (asChannel) {\n        fromID = 0\n        pFlags.post = true\n      } else {\n        flags |= 256\n      }\n      var media = {\n        _: 'messageMediaPending',\n        type: attachType,\n        file_name: file.name || apiFileName,\n        size: file.size,\n        progress: {percent: 1, total: file.size}\n      }\n\n      var message = {\n        _: 'message',\n        id: messageID,\n        from_id: fromID,\n        to_id: AppPeersManager.getOutputPeer(peerID),\n        flags: flags,\n        pFlags: pFlags,\n        date: tsNow(true) + ServerTimeManager.serverTimeOffset,\n        message: '',\n        media: media,\n        random_id: randomIDS,\n        reply_to_msg_id: replyToMsgID,\n        views: asChannel && 1,\n        pending: true\n      }\n\n      var toggleError = function (on) {\n        var historyMessage = messagesForHistory[messageID]\n        if (on) {\n          message.error = true\n          if (historyMessage) {\n            historyMessage.error = true\n          }\n        } else {\n          delete message.error\n          if (historyMessage) {\n            delete historyMessage.error\n          }\n        }\n        $rootScope.$broadcast('messages_pending')\n      }\n\n      var uploaded = false,\n        uploadPromise\n\n      message.send = function () {\n        var sendFileDeferred = $q.defer()\n\n        sendFilePromise.then(function () {\n          if (!uploaded || message.error) {\n            uploaded = false\n            uploadPromise = MtpApiFileManager.uploadFile(file)\n          }\n\n          uploadPromise.then(function (inputFile) {\n            inputFile.name = apiFileName\n            uploaded = true\n            var inputMedia\n            switch (attachType) {\n              case 'photo':\n                inputMedia = {_: 'inputMediaUploadedPhoto', flags: 0, file: inputFile}\n                break\n\n              case 'document':\n              default:\n                inputMedia = {_: 'inputMediaUploadedDocument', file: inputFile, mime_type: file.type, caption: '', attributes: [\n                    {_: 'documentAttributeFilename', file_name: file.name}\n                ]}\n            }\n            var flags = 0\n            if (replyToMsgID) {\n              flags |= 1\n            }\n            if (asChannel) {\n              flags |= 16\n            }\n            MtpApiManager.invokeApi('messages.sendMedia', {\n              flags: flags,\n              peer: AppPeersManager.getInputPeerByID(peerID),\n              media: inputMedia,\n              random_id: randomID,\n              reply_to_msg_id: AppMessagesIDsManager.getMessageLocalID(replyToMsgID)\n            }).then(function (updates) {\n              ApiUpdatesManager.processUpdateMessage(updates)\n            }, function (error) {\n              if (attachType == 'photo' &&\n                error.code == 400 &&\n                (error.type == 'PHOTO_INVALID_DIMENSIONS' ||\n                error.type == 'PHOTO_SAVE_FILE_INVALID')) {\n                error.handled = true\n                attachType = 'document'\n                message.send()\n                return\n              }\n              toggleError(true)\n            })\n          }, function (error) {\n            toggleError(true)\n          }, function (progress) {\n            // console.log('upload progress', progress)\n            media.progress.done = progress.done\n            media.progress.percent = Math.max(1, Math.floor(100 * progress.done / progress.total))\n            $rootScope.$broadcast('history_update', {peerID: peerID})\n          })\n\n          media.progress.cancel = function () {\n            if (!uploaded) {\n              sendFileDeferred.resolve()\n              uploadPromise.cancel()\n              cancelPendingMessage(randomIDS)\n            }\n          }\n\n          uploadPromise['finally'](function () {\n            sendFileDeferred.resolve()\n          })\n        })\n\n        sendFilePromise = sendFileDeferred.promise\n      }\n\n      saveMessages([message])\n      historyStorage.pending.unshift(messageID)\n      $rootScope.$broadcast('history_append', {peerID: peerID, messageID: messageID, my: true})\n\n      setZeroTimeout(message.send)\n\n      pendingByRandomID[randomIDS] = [peerID, messageID]\n    }\n\n    function sendOther (peerID, inputMedia, options) {\n      options = options || {}\n\n      var messageID = tempID--\n      var randomID = [nextRandomInt(0xFFFFFFFF), nextRandomInt(0xFFFFFFFF)]\n      var randomIDS = bigint(randomID[0]).shiftLeft(32).add(bigint(randomID[1])).toString()\n      var historyStorage = historiesStorage[peerID]\n      var replyToMsgID = options.replyToMsgID\n      var isChannel = AppPeersManager.isChannel(peerID)\n      var isMegagroup = isChannel && AppPeersManager.isMegagroup(peerID)\n      var asChannel = isChannel && !isMegagroup ? true : false\n\n      if (historyStorage === undefined) {\n        historyStorage = historiesStorage[peerID] = {count: null, history: [], pending: []}\n      }\n\n      var fromID = AppUsersManager.getSelf().id\n      var media\n      switch (inputMedia._) {\n        case 'inputMediaPhoto':\n          media = {\n            _: 'messageMediaPhoto',\n            photo: AppPhotosManager.getPhoto(inputMedia.id.id),\n            caption: inputMedia.caption || ''\n          }\n          break\n\n        case 'inputMediaDocument':\n          var doc = AppDocsManager.getDoc(inputMedia.id.id)\n          if (doc.sticker && doc.stickerSetInput) {\n            AppStickersManager.pushPopularSticker(doc.id)\n          }\n          media = {\n            _: 'messageMediaDocument',\n            'document': doc,\n            caption: inputMedia.caption || ''\n          }\n          break\n\n        case 'inputMediaContact':\n          media = {\n            _: 'messageMediaContact',\n            phone_number: inputMedia.phone_number,\n            first_name: inputMedia.first_name,\n            last_name: inputMedia.last_name,\n            user_id: 0\n          }\n          break\n\n        case 'inputMediaGeoPoint':\n          media = {\n            _: 'messageMediaGeo',\n            geo: {\n              _: 'geoPoint',\n              'lat': inputMedia.geo_point['lat'],\n              'long': inputMedia.geo_point['long']\n            }\n          }\n          break\n\n        case 'inputMediaVenue':\n          media = {\n            _: 'messageMediaVenue',\n            geo: {\n              _: 'geoPoint',\n              'lat': inputMedia.geo_point['lat'],\n              'long': inputMedia.geo_point['long']\n            },\n            title: inputMedia.title,\n            address: inputMedia.address,\n            provider: inputMedia.provider,\n            venue_id: inputMedia.venue_id\n          }\n          break\n\n        case 'messageMediaPending':\n          media = inputMedia\n          break\n      }\n\n      var flags = 0\n      var pFlags = {}\n      if (peerID != fromID) {\n        flags |= 2\n        pFlags.out = true\n        if (!AppUsersManager.isBot(peerID)) {\n          flags |= 1\n          pFlags.unread = true\n        }\n      }\n      if (replyToMsgID) {\n        flags |= 8\n      }\n      if (asChannel) {\n        fromID = 0\n        pFlags.post = true\n      } else {\n        flags |= 256\n      }\n\n      var message = {\n        _: 'message',\n        id: messageID,\n        from_id: fromID,\n        to_id: AppPeersManager.getOutputPeer(peerID),\n        flags: flags,\n        pFlags: pFlags,\n        date: tsNow(true) + ServerTimeManager.serverTimeOffset,\n        message: '',\n        media: media,\n        random_id: randomIDS,\n        reply_to_msg_id: replyToMsgID,\n        via_bot_id: options.viaBotID,\n        reply_markup: options.reply_markup,\n        views: asChannel && 1,\n        pending: true\n      }\n\n      var toggleError = function (on) {\n        var historyMessage = messagesForHistory[messageID]\n        if (on) {\n          message.error = true\n          if (historyMessage) {\n            historyMessage.error = true\n          }\n        } else {\n          delete message.error\n          if (historyMessage) {\n            delete historyMessage.error\n          }\n        }\n        $rootScope.$broadcast('messages_pending')\n      }\n\n      message.send = function () {\n        var flags = 0\n        if (replyToMsgID) {\n          flags |= 1\n        }\n        if (asChannel) {\n          flags |= 16\n        }\n        if (options.clearDraft) {\n          flags |= 128\n        }\n\n        var sentRequestOptions = {}\n        if (pendingAfterMsgs[peerID]) {\n          sentRequestOptions.afterMessageID = pendingAfterMsgs[peerID].messageID\n        }\n\n        var apiPromise\n        if (options.viaBotID) {\n          apiPromise = MtpApiManager.invokeApi('messages.sendInlineBotResult', {\n            flags: flags,\n            peer: AppPeersManager.getInputPeerByID(peerID),\n            random_id: randomID,\n            reply_to_msg_id: AppMessagesIDsManager.getMessageLocalID(replyToMsgID),\n            query_id: options.queryID,\n            id: options.resultID\n          }, sentRequestOptions)\n        } else {\n          apiPromise = MtpApiManager.invokeApi('messages.sendMedia', {\n            flags: flags,\n            peer: AppPeersManager.getInputPeerByID(peerID),\n            media: inputMedia,\n            random_id: randomID,\n            reply_to_msg_id: AppMessagesIDsManager.getMessageLocalID(replyToMsgID)\n          }, sentRequestOptions)\n        }\n        apiPromise.then(function (updates) {\n          if (updates.updates) {\n            angular.forEach(updates.updates, function (update) {\n              if (update._ == 'updateDraftMessage') {\n                update.local = true\n              }\n            })\n          }\n          ApiUpdatesManager.processUpdateMessage(updates)\n        }, function (error) {\n          toggleError(true)\n        })['finally'](function () {\n          if (pendingAfterMsgs[peerID] === sentRequestOptions) {\n            delete pendingAfterMsgs[peerID]\n          }\n        })\n        pendingAfterMsgs[peerID] = sentRequestOptions\n      }\n\n      saveMessages([message])\n      historyStorage.pending.unshift(messageID)\n      $rootScope.$broadcast('history_append', {peerID: peerID, messageID: messageID, my: true})\n\n      setZeroTimeout(message.send)\n\n      if (options.clearDraft) {\n        DraftsManager.clearDraft(peerID)\n      }\n\n      pendingByRandomID[randomIDS] = [peerID, messageID]\n    }\n\n    function forwardMessages (peerID, mids, options) {\n      mids = mids.sort()\n      options = options || {}\n\n      var flags = 0\n      var isChannel = AppPeersManager.isChannel(peerID)\n      var isMegagroup = isChannel && AppPeersManager.isMegagroup(peerID)\n      var asChannel = isChannel && !isMegagroup ? true : false\n\n      if (asChannel) {\n        flags |= 16\n      }\n      if (options.withMyScore) {\n        flags |= 256\n      }\n\n      var splitted = AppMessagesIDsManager.splitMessageIDsByChannels(mids)\n      var promises = []\n      angular.forEach(splitted.msgIDs, function (msgIDs, channelID) {\n        var len = msgIDs.length\n        var randomIDs = []\n        for (var i = 0; i < len; i++) {\n          randomIDs.push([nextRandomInt(0xFFFFFFFF), nextRandomInt(0xFFFFFFFF)])\n        }\n        var sentRequestOptions = {}\n        if (pendingAfterMsgs[peerID]) {\n          sentRequestOptions.afterMessageID = pendingAfterMsgs[peerID].messageID\n        }\n        var promise = MtpApiManager.invokeApi('messages.forwardMessages', {\n          flags: flags,\n          from_peer: AppPeersManager.getInputPeerByID(-channelID),\n          id: msgIDs,\n          random_id: randomIDs,\n          to_peer: AppPeersManager.getInputPeerByID(peerID)\n        }, sentRequestOptions).then(function (updates) {\n          ApiUpdatesManager.processUpdateMessage(updates)\n        })['finally'](function () {\n          if (pendingAfterMsgs[peerID] === sentRequestOptions) {\n            delete pendingAfterMsgs[peerID]\n          }\n        })\n        pendingAfterMsgs[peerID] = sentRequestOptions\n        promises.push(promise)\n      })\n\n      return $q.all(promises)\n    }\n\n    function startBot (botID, chatID, startParam) {\n      var peerID = chatID ? -chatID : botID\n      if (startParam) {\n        var randomID = bigint(nextRandomInt(0xFFFFFFFF)).shiftLeft(32).add(bigint(nextRandomInt(0xFFFFFFFF))).toString()\n\n        return MtpApiManager.invokeApi('messages.startBot', {\n          bot: AppUsersManager.getUserInput(botID),\n          peer: AppPeersManager.getInputPeerByID(peerID),\n          random_id: randomID,\n          start_param: startParam\n        }).then(function (updates) {\n          ApiUpdatesManager.processUpdateMessage(updates)\n        })\n      }\n\n      if (chatID) {\n        if (AppChatsManager.isChannel(chatID)) {\n          return MtpApiManager.invokeApi('channels.inviteToChannel', {\n            channel: AppChatsManager.getChannelInput(chatID),\n            users: [AppUsersManager.getUserInput(botID)]\n          }).then(function (updates) {\n            ApiUpdatesManager.processUpdateMessage(updates)\n            sendText(peerID, '/start@' + bot.username)\n          }, function (error) {\n            if (error && error.type == 'USER_ALREADY_PARTICIPANT') {\n              var bot = AppUsersManager.getUser(botID)\n              sendText(peerID, '/start@' + bot.username)\n              error.handled = true\n            }\n          })\n        } else {\n          return MtpApiManager.invokeApi('messages.addChatUser', {\n            chat_id: AppChatsManager.getChatInput(chatID),\n            user_id: AppUsersManager.getUserInput(botID)\n          }).then(function (updates) {\n            ApiUpdatesManager.processUpdateMessage(updates)\n            sendText(peerID, '/start@' + bot.username)\n          }, function (error) {\n            if (error && error.type == 'USER_ALREADY_PARTICIPANT') {\n              var bot = AppUsersManager.getUser(botID)\n              sendText(peerID, '/start@' + bot.username)\n              error.handled = true\n            }\n          })\n        }\n      }\n\n      return sendText(peerID, '/start')\n    }\n\n    function shareGame (botID, peerID, inputGame) {\n      var randomID = bigint(nextRandomInt(0xFFFFFFFF)).shiftLeft(32).add(bigint(nextRandomInt(0xFFFFFFFF))).toString()\n      return MtpApiManager.invokeApi('messages.sendMedia', {\n        flags: 0,\n        peer: AppPeersManager.getInputPeerByID(peerID),\n        media: {\n          _: 'inputMediaGame',\n          id: inputGame\n        },\n        random_id: randomID\n      }).then(function (updates) {\n        ApiUpdatesManager.processUpdateMessage(updates)\n      })\n    }\n\n    function cancelPendingMessage (randomID) {\n      var pendingData = pendingByRandomID[randomID]\n\n      console.log('pending', randomID, pendingData)\n\n      if (pendingData) {\n        var peerID = pendingData[0]\n        var tempID = pendingData[1]\n        var historyStorage = historiesStorage[peerID]\n        var pos = historyStorage.pending.indexOf(tempID)\n\n        ApiUpdatesManager.processUpdateMessage({\n          _: 'updateShort',\n          update: {\n            _: 'updateDeleteMessages',\n            messages: [tempID]\n          }\n        })\n\n        if (pos != -1) {\n          historyStorage.pending.splice(pos, 1)\n        }\n\n        delete messagesForHistory[tempID]\n        delete messagesStorage[tempID]\n\n        return true\n      }\n\n      return false\n    }\n\n    function finalizePendingMessage (randomID, finalMessage) {\n      var pendingData = pendingByRandomID[randomID]\n      // console.log('pdata', randomID, pendingData)\n\n      if (pendingData) {\n        var peerID = pendingData[0]\n        var tempID = pendingData[1]\n        var historyStorage = historiesStorage[peerID],\n          message,\n          historyMessage\n\n        // console.log('pending', randomID, historyStorage.pending)\n        var pos = historyStorage.pending.indexOf(tempID)\n        if (pos != -1) {\n          historyStorage.pending.splice(pos, 1)\n        }\n\n        if (message = messagesStorage[tempID]) {\n          delete message.pending\n          delete message.error\n          delete message.random_id\n          delete message.send\n        }\n\n        if (historyMessage = messagesForHistory[tempID]) {\n          messagesForHistory[finalMessage.mid] = angular.extend(historyMessage, wrapForHistory(finalMessage.mid))\n          delete historyMessage.pending\n          delete historyMessage.error\n          delete historyMessage.random_id\n          delete historyMessage.send\n\n          $rootScope.$broadcast('messages_pending')\n        }\n\n        delete messagesForHistory[tempID]\n        delete messagesStorage[tempID]\n\n        return message\n      }\n\n      return false\n    }\n\n    function getMessagePeer (message) {\n      var toID = message.to_id && AppPeersManager.getPeerID(message.to_id) || 0\n\n      if (toID < 0) {\n        return toID\n      } else if (message.pFlags && message.pFlags.out || message.flags & 2) {\n        return toID\n      }\n      return message.from_id\n    }\n\n    function wrapForDialog (msgID, dialog) {\n      var useCache = msgID && dialog !== undefined\n      var unreadCount = dialog && dialog.unread_count\n\n      if (useCache && messagesForDialogs[msgID] !== undefined) {\n        delete messagesForDialogs[msgID].typing\n        messagesForDialogs[msgID].unreadCount = unreadCount\n        return messagesForDialogs[msgID]\n      }\n\n      var message = angular.copy(messagesStorage[msgID])\n\n      if (!message || !message.to_id) {\n        if (dialog && dialog.peerID) {\n          message = {\n            _: 'message',\n            to_id: AppPeersManager.getOutputPeer(dialog.peerID),\n            deleted: true,\n            date: tsNow(true),\n            pFlags: {}\n          }\n        } else {\n          return message\n        }\n      }\n\n      message.peerID = getMessagePeer(message)\n      message.peerData = AppPeersManager.getPeer(message.peerID)\n      message.peerString = AppPeersManager.getPeerString(message.peerID)\n      message.unreadCount = unreadCount\n      message.index = dialog && dialog.index || (message.date * 0x10000)\n\n      if (message._ == 'messageService' && message.action.user_id) {\n        message.action.user = AppUsersManager.getUser(message.action.user_id)\n      }\n\n      if (message.message && message.message.length) {\n        message.richMessage = RichTextProcessor.wrapRichText(message.message.substr(0, 64), {noLinks: true, noLinebreaks: true})\n      }\n\n      message.dateText = dateOrTimeFilter(message.date)\n\n      if (useCache) {\n        message.draft = DraftsManager.getServerDraft(message.peerID)\n        messagesForDialogs[msgID] = message\n      }\n\n      return message\n    }\n\n    function wrapSingleMessage (msgID) {\n      if (messagesStorage[msgID]) {\n        return wrapForDialog(msgID)\n      }\n      if (needSingleMessages.indexOf(msgID) == -1) {\n        needSingleMessages.push(msgID)\n        if (fetchSingleMessagesTimeout === false) {\n          fetchSingleMessagesTimeout = setTimeout(fetchSingleMessages, 100)\n        }\n      }\n      return {mid: msgID, loading: true}\n    }\n\n    function clearDialogCache (msgID) {\n      delete messagesForDialogs[msgID]\n    }\n\n    function wrapForHistory (msgID) {\n      if (messagesForHistory[msgID] !== undefined) {\n        return messagesForHistory[msgID]\n      }\n\n      var message = angular.copy(messagesStorage[msgID]) || {id: msgID}\n\n      if (message.media && message.media.progress !== undefined) {\n        message.media.progress = messagesStorage[msgID].media.progress\n      }\n\n      var fromUser = message.from_id && AppUsersManager.getUser(message.from_id)\n      var fromBot = fromUser && fromUser.pFlags.bot && fromUser.username || false\n      var withBot = (fromBot ||\n        message.to_id && (\n        message.to_id.chat_id ||\n        message.to_id.user_id && AppUsersManager.isBot(message.to_id.user_id)\n      )\n      )\n\n      if (message.media) {\n        if (message.media.caption &&\n          message.media.caption.length) {\n          message.media.rCaption = RichTextProcessor.wrapRichText(message.media.caption, {\n            noCommands: !withBot,\n            fromBot: fromBot\n          })\n        }\n\n        switch (message.media._) {\n          case 'messageMediaPhoto':\n            message.media.photo = AppPhotosManager.wrapForHistory(message.media.photo.id)\n            break\n\n          case 'messageMediaDocument':\n            message.media.document = AppDocsManager.wrapForHistory(message.media.document.id)\n            break\n\n          case 'messageMediaGeo':\n            var mapUrl = 'https://maps.google.com/?q=' + message.media.geo['lat'] + ',' + message.media.geo['long']\n            message.media.mapUrl = $sce.trustAsResourceUrl(mapUrl)\n            break\n\n          case 'messageMediaVenue':\n            var mapUrl\n            if (message.media.provider == 'foursquare' &&\n              message.media.venue_id) {\n              mapUrl = 'https://foursquare.com/v/' + encodeURIComponent(message.media.venue_id)\n            } else {\n              mapUrl = 'https://maps.google.com/?q=' + message.media.geo['lat'] + ',' + message.media.geo['long']\n            }\n            message.media.mapUrl = $sce.trustAsResourceUrl(mapUrl)\n            break\n\n          case 'messageMediaContact':\n            message.media.rFullName = RichTextProcessor.wrapRichText(\n              message.media.first_name + ' ' + (message.media.last_name || ''),\n              {noLinks: true, noLinebreaks: true}\n            )\n            break\n\n          case 'messageMediaWebPage':\n            if (!message.media.webpage ||\n              message.media.webpage._ == 'webPageEmpty') {\n              delete message.media\n              break\n            }\n            message.media.webpage = AppWebPagesManager.wrapForHistory(message.media.webpage.id)\n            break\n\n          case 'messageMediaGame':\n            message.media.game = AppGamesManager.wrapForHistory(message.media.game.id)\n            break\n        }\n      }\n      else if (message.action) {\n        switch (message.action._) {\n          case 'messageActionChatEditPhoto':\n          case 'messageActionChannelEditPhoto':\n            message.action.photo = AppPhotosManager.wrapForHistory(message.action.photo.id)\n            break\n\n          case 'messageActionChatCreate':\n          case 'messageActionChatEditTitle':\n          case 'messageActionChannelCreate':\n          case 'messageActionChannelEditTitle':\n            message.action.rTitle = RichTextProcessor.wrapRichText(message.action.title, {noLinebreaks: true}) || _('chat_title_deleted')\n            break\n\n          case 'messageActionBotIntro':\n            message.action.rDescription = RichTextProcessor.wrapRichText(message.action.description, {\n              noCommands: !withBot,\n              fromBot: fromBot\n            })\n            break\n        }\n      }\n\n      return messagesForHistory[msgID] = message\n    }\n\n    function wrapReplyMarkup (replyMarkup) {\n      if (!replyMarkup ||\n        replyMarkup._ == 'replyKeyboardHide') {\n        return false\n      }\n      if (replyMarkup.wrapped) {\n        return replyMarkup\n      }\n      var isInline = replyMarkup._ == 'replyInlineMarkup'\n      var count = replyMarkup.rows && replyMarkup.rows.length || 0\n      if (!isInline &&\n        count > 0 &&\n        count <= 4 &&\n        !(replyMarkup.pFlags && replyMarkup.pFlags.resize)) {\n        replyMarkup.splitCount = count\n      }\n      replyMarkup.wrapped = true\n      angular.forEach(replyMarkup.rows, function (markupRow) {\n        angular.forEach(markupRow.buttons, function (markupButton) {\n          markupButton.rText = RichTextProcessor.wrapRichText(markupButton.text, {noLinks: true, noLinebreaks: true})\n          if (markupButton._ == 'keyboardButtonUrl') {\n            markupButton.pUrl = RichTextProcessor.wrapUrl(markupButton.url, 1)\n          }\n        })\n      })\n      return replyMarkup\n    }\n\n    function wrapMessageText(msgID) {\n      var message = getMessage(msgID)\n      var fromUser = message.from_id && AppUsersManager.getUser(message.from_id)\n      var fromBot = fromUser && fromUser.pFlags.bot && fromUser.username || false\n      var toPeerID = AppPeersManager.getPeerID(message.to_id)\n      var withBot = (fromBot ||\n        toPeerID < 0 && !(AppChatsManager.isChannel(-toPeerID) && !AppChatsManager.isMegagroup(-toPeerID)) ||\n        toPeerID > 0 && AppUsersManager.isBot(toPeerID))\n\n      var options = {\n        noCommands: !withBot,\n        fromBot: fromBot,\n        entities: message.totalEntities\n      }\n      if (message.pFlags.mentioned) {\n        var user = AppUsersManager.getSelf()\n        if (user) {\n          options.highlightUsername = user.username\n        }\n      }\n      return RichTextProcessor.wrapRichText(message.message, options)\n    }\n\n    function fetchSingleMessages () {\n      if (fetchSingleMessagesTimeout !== false) {\n        clearTimeout(fetchSingleMessagesTimeout)\n        fetchSingleMessagesTimeout = false\n      }\n      if (!needSingleMessages.length) {\n        return\n      }\n      var mids = needSingleMessages.slice()\n      needSingleMessages = []\n\n      var splitted = AppMessagesIDsManager.splitMessageIDsByChannels(mids)\n      angular.forEach(splitted.msgIDs, function (msgIDs, channelID) {\n        var promise\n        if (channelID > 0) {\n          promise = MtpApiManager.invokeApi('channels.getMessages', {\n            channel: AppChatsManager.getChannelInput(channelID),\n            id: msgIDs\n          })\n        } else {\n          promise = MtpApiManager.invokeApi('messages.getMessages', {\n            id: msgIDs\n          })\n        }\n\n        promise.then(function (getMessagesResult) {\n          AppUsersManager.saveApiUsers(getMessagesResult.users)\n          AppChatsManager.saveApiChats(getMessagesResult.chats)\n          saveMessages(getMessagesResult.messages)\n\n          $rootScope.$broadcast('messages_downloaded', splitted.mids[channelID])\n        })\n      })\n    }\n\n    function incrementMessageViews () {\n      if (incrementMessageViewsTimeout !== false) {\n        clearTimeout(incrementMessageViewsTimeout)\n        incrementMessageViewsTimeout = false\n      }\n      if (!needIncrementMessageViews.length) {\n        return\n      }\n      var mids = needIncrementMessageViews.slice()\n      needIncrementMessageViews = []\n\n      var splitted = AppMessagesIDsManager.splitMessageIDsByChannels(mids)\n      angular.forEach(splitted.msgIDs, function (msgIDs, channelID) {\n        // console.log('increment', msgIDs, channelID)\n        MtpApiManager.invokeApi('messages.getMessagesViews', {\n          peer: AppPeersManager.getInputPeerByID(-channelID),\n          id: msgIDs,\n          increment: true\n        }).then(function (views) {\n          if (channelID) {\n            var mids = splitted.mids[channelID]\n            var updates = []\n            for (var i = 0; i < mids.length; i++) {\n              updates.push({\n                _: 'updateChannelMessageViews',\n                channel_id: channelID,\n                id: mids[i],\n                views: views[i]\n              })\n            }\n            ApiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: updates,\n              chats: [],\n              users: []\n            })\n          }\n        })\n      })\n    }\n\n    function regroupWrappedHistory (history, limit) {\n      if (!history || !history.length) {\n        return false\n      }\n      var start = 0\n      var len = history.length\n      var end = len,\n        i, curDay\n      var prevDay, curMessage\n      var prevMessage, curGrouped\n      var prevGrouped\n      var wasUpdated = false\n      var groupFwd = !Config.Mobile\n\n      if (limit > 0) {\n        end = Math.min(limit, len)\n      } else if (limit < 0) {\n        start = Math.max(0, end + limit)\n      }\n\n      for (i = start; i < end; i++) {\n        if (history[i].deleted) {\n          history.splice(i, 1)\n          end--\n          continue\n        }\n        curMessage = history[i]\n        curDay = Math.floor((curMessage.date + ServerTimeManager.midnightOffset) / 86400)\n\n        prevGrouped = prevMessage && prevMessage.grouped\n        curGrouped = curMessage.grouped\n\n        if (curDay === prevDay) {\n          if (curMessage.needDate) {\n            delete curMessage.needDate\n            wasUpdated = true\n          }\n        } else if (!i || prevMessage) {\n          if (!curMessage.needDate) {\n            curMessage.needDate = true\n            wasUpdated = true\n          }\n        }\n\n        if (curMessage.fwdFromID &&\n          curMessage.media &&\n          curMessage.media.document &&\n          (curMessage.media.document.sticker || curMessage.media.document.audioTitle) &&\n          (curMessage.fromID != (prevMessage || {}).fromID || !(prevMessage || {}).fwdFromID)) {\n          delete curMessage.fwdFromID\n          curMessage._ = 'message'\n        }\n\n        if (curMessage.views &&\n          !incrementedMessageViews[curMessage.mid]) {\n          incrementedMessageViews[curMessage.mid] = true\n          needIncrementMessageViews.push(curMessage.mid)\n          if (incrementMessageViewsTimeout === false) {\n            incrementMessageViewsTimeout = setTimeout(incrementMessageViews, 10000)\n          }\n        }\n\n        if (prevMessage &&\n          // !curMessage.views &&\n          prevMessage.fromID == curMessage.fromID &&\n          !prevMessage.fwdFromID == !curMessage.fwdFromID &&\n          prevMessage.viaBotID == curMessage.viaBotID &&\n          !prevMessage.action &&\n          !curMessage.action &&\n          curMessage.date < prevMessage.date + 900) {\n          var singleLine = curMessage.message && curMessage.message.length < 70 && curMessage.message.indexOf('\\n') == -1 && !curMessage.reply_to_mid\n          if (groupFwd &&\n            curMessage.fwdFromID &&\n            curMessage.fwdFromID == prevMessage.fwdFromID &&\n            curMessage.viaBotID == prevMessage.viaBotID) {\n            curMessage.grouped = singleLine ? 'im_grouped_fwd_short' : 'im_grouped_fwd'\n          } else {\n            curMessage.grouped = !curMessage.fwdFromID && singleLine ? 'im_grouped_short' : 'im_grouped'\n          }\n          if (groupFwd && curMessage.fwdFromID) {\n            if (!prevMessage.grouped) {\n              prevMessage.grouped = 'im_grouped_fwd_start'\n            }\n            if (curMessage.grouped && i == len - 1) {\n              curMessage.grouped += ' im_grouped_fwd_end'\n            }\n          }\n        } else if (prevMessage || !i) {\n          delete curMessage.grouped\n\n          if (groupFwd && prevMessage && prevMessage.grouped && prevMessage.fwdFromID) {\n            prevMessage.grouped += ' im_grouped_fwd_end'\n          }\n        }\n        if (!wasUpdated && prevGrouped != (prevMessage && prevMessage.grouped)) {\n          wasUpdated = true\n        }\n        prevMessage = curMessage\n        prevDay = curDay\n      }\n      if (!wasUpdated && curGrouped != (prevMessage && prevMessage.grouped)) {\n        wasUpdated = true\n      }\n\n      return wasUpdated\n    }\n\n    function getMessageThumb (message, thumbWidth, thumbHeight) {\n      var thumbPhotoSize\n      var sticker = false\n      if (message.media) {\n        switch (message.media._) {\n          case 'messageMediaPhoto':\n            thumbPhotoSize = AppPhotosManager.choosePhotoSize(message.media.photo, thumbWidth, thumbHeight)\n            break\n\n          case 'messageMediaDocument':\n            thumbPhotoSize = message.media.document.thumb\n            if (message.media.document.sticker) {\n              sticker = true\n            }\n            break\n        }\n      }\n\n      if (thumbPhotoSize && thumbPhotoSize._ != 'photoSizeEmpty') {\n        var dim = calcImageInBox(thumbPhotoSize.w, thumbPhotoSize.h, thumbWidth, thumbHeight, true)\n\n        var thumb = {\n          width: dim.w,\n          height: dim.h,\n          location: thumbPhotoSize.location,\n          size: thumbPhotoSize.size\n        }\n        if (sticker) {\n          thumb.location.sticker = true\n        }\n\n        return thumb\n      }\n\n      return false\n    }\n\n    function incrementMaxSeenID (maxID) {\n      if (maxSeenID !== false && maxID && maxID > maxSeenID) {\n        Storage.set({\n          max_seen_msg: maxID\n        })\n      }\n    }\n\n    function notifyAboutMessage (message, options) {\n      options = options || {}\n\n      var peerID = getMessagePeer(message)\n      var peerString\n      var notification = {}\n      var notificationMessage = false,\n        notificationPhoto\n\n      var notifySettings = NotificationsManager.getNotifySettings()\n\n      if (message.fwdFromID && options.fwd_count) {\n        notificationMessage = fwdMessagesPluralize(options.fwd_count)\n      } else if (message.message) {\n        if (notifySettings.nopreview) {\n          notificationMessage = _('conversation_message_sent')\n        } else {\n          notificationMessage = RichTextProcessor.wrapPlainText(message.message)\n        }\n      } else if (message.media) {\n        var captionEmoji = false;\n        switch (message.media._) {\n          case 'messageMediaPhoto':\n            notificationMessage = _('conversation_media_photo_raw')\n            captionEmoji = '🖼'\n            break\n          case 'messageMediaDocument':\n            switch (message.media.document.type) {\n              case 'gif':\n                notificationMessage = _('conversation_media_gif_raw')\n                captionEmoji = '🎬'\n                break\n              case 'sticker':\n                var stickerEmoji = message.media.document.stickerEmojiRaw\n                if (stickerEmoji !== undefined) {\n                  notificationMessage = RichTextProcessor.wrapPlainText(stickerEmoji) + ' ' + notificationMessage\n                } else {\n                  notificationMessage = _('conversation_media_sticker')\n                }\n                break\n              case 'video':\n                notificationMessage = _('conversation_media_video_raw')\n                captionEmoji = '📹'\n                break\n              case 'voice':\n              case 'audio':\n                notificationMessage = _('conversation_media_audio_raw')\n                break\n              default:\n                if (message.media.document.file_name) {\n                  notificationMessage = RichTextProcessor.wrapPlainText('📎 ' + message.media.document.file_name)\n                } else {\n                  notificationMessage = _('conversation_media_document_raw')\n                  captionEmoji = '📎'\n                }\n                break\n            }\n            break\n\n          case 'messageMediaGeo':\n          case 'messageMediaVenue':\n            notificationMessage = _('conversation_media_location_raw')\n            captionEmoji = '📍'\n            break\n          case 'messageMediaContact':\n            notificationMessage = _('conversation_media_contact_raw')\n            break\n          case 'messageMediaGame':\n            notificationMessage = RichTextProcessor.wrapPlainText('🎮 ' + message.media.game.title)\n            break\n          default:\n            notificationMessage = _('conversation_media_attachment_raw')\n            break\n        }\n\n        if (captionEmoji !== false &&\n            message.media.caption) {\n          notificationMessage = RichTextProcessor.wrapPlainText(captionEmoji + ' ' + message.media.caption)\n        }\n      } else if (message._ == 'messageService') {\n        switch (message.action._) {\n          case 'messageActionChatCreate':\n            notificationMessage = _('conversation_group_created_raw')\n            break\n          case 'messageActionChatEditTitle':\n            notificationMessage = _('conversation_group_renamed_raw')\n            break\n          case 'messageActionChatEditPhoto':\n            notificationMessage = _('conversation_group_photo_updated_raw')\n            break\n          case 'messageActionChatDeletePhoto':\n            notificationMessage = _('conversation_group_photo_removed_raw')\n            break\n          case 'messageActionChatAddUser':\n          case 'messageActionChatAddUsers':\n            notificationMessage = _('conversation_invited_user_message_raw')\n            break\n          case 'messageActionChatReturn':\n            notificationMessage = _('conversation_returned_to_group_raw')\n            break\n          case 'messageActionChatJoined':\n            notificationMessage = _('conversation_joined_group_raw')\n            break\n          case 'messageActionChatDeleteUser':\n            notificationMessage = _('conversation_kicked_user_message_raw')\n            break\n          case 'messageActionChatLeave':\n            notificationMessage = _('conversation_left_group_raw')\n            break\n          case 'messageActionChatJoinedByLink':\n            notificationMessage = _('conversation_joined_by_link_raw')\n            break\n          case 'messageActionChannelCreate':\n            notificationMessage = _('conversation_created_channel_raw')\n            break\n          case 'messageActionChannelEditTitle':\n            notificationMessage = _('conversation_changed_channel_name_raw')\n            break\n          case 'messageActionChannelEditPhoto':\n            notificationMessage = _('conversation_changed_channel_photo_raw')\n            break\n          case 'messageActionChannelDeletePhoto':\n            notificationMessage = _('conversation_removed_channel_photo_raw')\n            break\n          case 'messageActionPinMessage':\n            notificationMessage = _('conversation_pinned_message_raw')\n            break\n          case 'messageActionGameScore':\n            notificationMessage = gameScorePluralize(message.action.score)\n            break\n        }\n      }\n\n      if (peerID > 0) {\n        var fromUser = AppUsersManager.getUser(message.from_id)\n        var fromPhoto = AppUsersManager.getUserPhoto(message.from_id)\n\n        notification.title = (fromUser.first_name || '') +\n          (fromUser.first_name && fromUser.last_name ? ' ' : '') +\n          (fromUser.last_name || '')\n        if (!notification.title) {\n          notification.title = fromUser.phone || _('conversation_unknown_user_raw')\n        }\n\n        notificationPhoto = fromPhoto\n\n        peerString = AppUsersManager.getUserString(peerID)\n      } else {\n        notification.title = AppChatsManager.getChat(-peerID).title || _('conversation_unknown_chat_raw')\n\n        if (message.from_id > 0) {\n          var fromUser = AppUsersManager.getUser(message.from_id)\n          notification.title = (fromUser.first_name || fromUser.last_name || _('conversation_unknown_user_raw')) +\n          ' @ ' +\n          notification.title\n        }\n\n        notificationPhoto = AppChatsManager.getChatPhoto(-peerID)\n\n        peerString = AppChatsManager.getChatString(-peerID)\n      }\n\n      notification.title = RichTextProcessor.wrapPlainText(notification.title)\n\n      notification.onclick = function () {\n        $rootScope.$broadcast('history_focus', {\n          peerString: peerString,\n          messageID: message.flags & 16 ? message.mid : 0\n        })\n      }\n\n      notification.message = notificationMessage\n      notification.key = 'msg' + message.mid\n      notification.tag = peerString\n\n      if (notificationPhoto.location && !notificationPhoto.location.empty) {\n        MtpApiFileManager.downloadSmallFile(notificationPhoto.location, notificationPhoto.size).then(function (blob) {\n          if (message.pFlags.unread) {\n            notification.image = blob\n            NotificationsManager.notify(notification)\n          }\n        })\n      } else {\n        NotificationsManager.notify(notification)\n      }\n    }\n\n    var newMessagesHandlePromise = false\n    var newMessagesToHandle = {}\n    var newDialogsHandlePromise = false\n    var newDialogsToHandle = {}\n    var notificationsHandlePromise = false\n    var notificationsToHandle = {}\n\n    function handleNewMessages () {\n      $timeout.cancel(newMessagesHandlePromise)\n      newMessagesHandlePromise = false\n      $rootScope.$broadcast('history_multiappend', newMessagesToHandle)\n      newMessagesToHandle = {}\n    }\n\n    function handleNewDialogs () {\n      $timeout.cancel(newDialogsHandlePromise)\n      newDialogsHandlePromise = false\n      angular.forEach(newDialogsToHandle, function (dialog) {\n        pushDialogToStorage(dialog)\n      })\n      $rootScope.$broadcast('dialogs_multiupdate', newDialogsToHandle)\n      newDialogsToHandle = {}\n    }\n\n    function handleNotifications () {\n      $timeout.cancel(notificationsHandlePromise)\n      notificationsHandlePromise = false\n\n      var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000\n      angular.forEach(notificationsToHandle, function (notifyPeerToHandle) {\n        notifyPeerToHandle.isMutedPromise.then(function (muted) {\n          var topMessage = notifyPeerToHandle.top_message\n          if (muted ||\n            !topMessage.pFlags.unread) {\n            return\n          }\n          setTimeout(function () {\n            if (topMessage.pFlags.unread) {\n              notifyAboutMessage(topMessage, {\n                fwd_count: notifyPeerToHandle.fwd_count\n              })\n            }\n          }, timeout)\n        })\n      })\n\n      notificationsToHandle = {}\n    }\n\n    $rootScope.$on('apiUpdate', function (e, update) {\n      // if (update._ != 'updateUserStatus') {\n      //   console.log('on apiUpdate', update)\n      // }\n      switch (update._) {\n        case 'updateMessageID':\n          var randomID = update.random_id\n          var pendingData = pendingByRandomID[randomID]\n          if (pendingData) {\n            var peerID = pendingData[0]\n            var channelID = AppPeersManager.isChannel(peerID) ? -peerID : 0\n            pendingByMessageID[AppMessagesIDsManager.getFullMessageID(update.id, channelID)] = randomID\n          }\n          break\n\n        case 'updateNewMessage':\n        case 'updateNewChannelMessage':\n          var message = update.message\n          var peerID = getMessagePeer(message)\n          var historyStorage = historiesStorage[peerID]\n\n          if (update._ == 'updateNewChannelMessage') {\n            var chat = AppChatsManager.getChat(-peerID)\n            if (chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n              break\n            }\n          }\n\n          saveMessages([message], {isNew: true})\n          // console.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n          if (historyStorage !== undefined) {\n            var history = historyStorage.history\n            if (history.indexOf(message.mid) != -1) {\n              return false\n            }\n            var topMsgID = history[0]\n            history.unshift(message.mid)\n            if (message.mid > 0 && message.mid < topMsgID) {\n              history.sort(function (a, b) {\n                return b - a\n              })\n            }\n            if (historyStorage.count !== null) {\n              historyStorage.count++\n            }\n          } else {\n            historyStorage = historiesStorage[peerID] = {\n              count: null,\n              history: [message.mid],\n              pending: []\n            }\n          }\n\n          if (mergeReplyKeyboard(historyStorage, message)) {\n            $rootScope.$broadcast('history_reply_markup', {peerID: peerID})\n          }\n\n          if (!message.pFlags.out && message.from_id) {\n            AppUsersManager.forceUserOnline(message.from_id)\n          }\n\n          var randomID = pendingByMessageID[message.mid],\n            pendingMessage\n\n          if (randomID) {\n            if (pendingMessage = finalizePendingMessage(randomID, message)) {\n              $rootScope.$broadcast('history_update', {peerID: peerID})\n            }\n            delete pendingByMessageID[message.mid]\n          }\n\n          if (!pendingMessage) {\n            if (newMessagesToHandle[peerID] === undefined) {\n              newMessagesToHandle[peerID] = []\n            }\n            newMessagesToHandle[peerID].push(message.mid)\n            if (!newMessagesHandlePromise) {\n              newMessagesHandlePromise = $timeout(handleNewMessages, 0)\n            }\n          }\n\n          var foundDialog = getDialogByPeerID(peerID)\n          var dialog\n          var inboxUnread = !message.pFlags.out && message.pFlags.unread\n\n          if (foundDialog.length) {\n            dialog = foundDialog[0]\n            dialog.top_message = message.mid\n            if (inboxUnread) {\n              dialog.unread_count++\n            }\n          } else {\n            SearchIndexManager.indexObject(peerID, AppPeersManager.getPeerSearchText(peerID), dialogsIndex)\n            dialog = {\n              peerID: peerID,\n              unread_count: inboxUnread ? 1 : 0,\n              top_message: message.mid\n            }\n          }\n          dialog.index = generateDialogIndex(message.date)\n\n          newDialogsToHandle[peerID] = dialog\n          if (!newDialogsHandlePromise) {\n            newDialogsHandlePromise = $timeout(handleNewDialogs, 0)\n          }\n\n          if (inboxUnread &&\n            ($rootScope.selectedPeerID != peerID || $rootScope.idle.isIDLE) &&\n            !message.pFlags.silent) {\n            var notifyPeer = message.flags & 16 ? message.from_id : peerID\n            var notifyPeerToHandle = notificationsToHandle[notifyPeer]\n            if (notifyPeerToHandle === undefined) {\n              notifyPeerToHandle = notificationsToHandle[notifyPeer] = {\n                isMutedPromise: NotificationsManager.getPeerMuted(notifyPeer),\n                fwd_count: 0,\n                from_id: 0\n              }\n            }\n\n            if (notifyPeerToHandle.from_id != message.from_id) {\n              notifyPeerToHandle.from_id = message.from_id\n              notifyPeerToHandle.fwd_count = 0\n            }\n            if (message.fwdFromID) {\n              notifyPeerToHandle.fwd_count++\n            }\n\n            notifyPeerToHandle.top_message = message\n\n            if (!notificationsHandlePromise) {\n              notificationsHandlePromise = $timeout(handleNotifications, 1000)\n            }\n          }\n\n          incrementMaxSeenID(message.id)\n          break\n\n        case 'updateEditMessage':\n        case 'updateEditChannelMessage':\n          var message = update.message\n          var peerID = getMessagePeer(message)\n          var channelID = message.to_id._ == 'peerChannel' ? -peerID : 0\n          var mid = AppMessagesIDsManager.getFullMessageID(message.id, channelID)\n          if (messagesStorage[mid] === undefined) {\n            break\n          }\n\n          // console.trace(dT(), 'edit message', message)\n          saveMessages([message], {isEdited: true})\n          safeReplaceObject(messagesStorage[mid], message)\n\n          var wasForHistory = messagesForHistory[mid]\n          if (wasForHistory !== undefined) {\n            delete messagesForHistory[mid]\n            var newForHistory = wrapForHistory(mid)\n            safeReplaceObject(wasForHistory, newForHistory)\n            messagesForHistory[mid] = wasForHistory\n          }\n\n          if (message.clear_history) {\n            var foundDialog = getDialogByPeerID(peerID)\n            if (foundDialog[0] &&\n              foundDialog[0].top_message == mid) {\n              $rootScope.$broadcast('dialog_flush', {peerID: peerID})\n            } else {\n              $rootScope.$broadcast('history_delete', {peerID: peerID, msgs: [mid]})\n            }\n          } else {\n            $rootScope.$broadcast('message_edit', {\n              peerID: peerID,\n              id: message.id,\n              mid: mid\n            })\n          }\n          break\n\n        case 'updateReadHistoryInbox':\n        case 'updateReadHistoryOutbox':\n        case 'updateReadChannelInbox':\n        case 'updateReadChannelOutbox':\n          var isOut = update._ == 'updateReadHistoryOutbox' || update._ == 'updateReadChannelOutbox'\n          var channelID = update.channel_id\n          var maxID = AppMessagesIDsManager.getFullMessageID(update.max_id, channelID)\n          var peerID = channelID ? -channelID : AppPeersManager.getPeerID(update.peer)\n          var foundDialog = getDialogByPeerID(peerID)\n          var history = (historiesStorage[peerID] || {}).history || []\n          var newUnreadCount = false\n          var length = history.length\n          var foundAffected = false\n          var messageID, message\n          var i\n\n          // console.warn(dT(), 'read', peerID, isOut ? 'out' : 'in', maxID)\n\n          if (peerID > 0 && isOut) {\n            AppUsersManager.forceUserOnline(peerID)\n          }\n\n          for (i = 0; i < length; i++) {\n            messageID = history[i]\n            if (messageID > maxID) {\n              continue\n            }\n            message = messagesStorage[messageID]\n\n            if (message.pFlags.out != isOut) {\n              continue\n            }\n            if (!message.pFlags.unread) {\n              break\n            }\n            // console.warn('read', messageID, message.pFlags.unread, message)\n            if (message && message.pFlags.unread) {\n              message.pFlags.unread = false\n              if (messagesForHistory[messageID]) {\n                messagesForHistory[messageID].pFlags.unread = false\n                if (!foundAffected) {\n                  foundAffected = true\n                }\n              }\n              if (messagesForDialogs[messageID]) {\n                messagesForDialogs[messageID].pFlags.unread = false\n              }\n              if (!message.pFlags.out) {\n                if (foundDialog[0]) {\n                  newUnreadCount = --foundDialog[0].unread_count\n                }\n                NotificationsManager.cancel('msg' + messageID)\n              }\n            }\n          }\n          if (foundDialog[0]) {\n            if (!isOut &&\n              newUnreadCount &&\n              foundDialog[0].top_message <= maxID) {\n              newUnreadCount = foundDialog[0].unread_count = 0\n            }\n            var dialogKey = isOut ? 'read_outbox_max_id' : 'read_inbox_max_id'\n            foundDialog[0][dialogKey] = maxID\n          }\n\n          if (newUnreadCount !== false) {\n            // console.warn(dT(), 'cnt', peerID, newUnreadCount)\n            $rootScope.$broadcast('dialog_unread', {peerID: peerID, count: newUnreadCount})\n          }\n          if (foundAffected) {\n            $rootScope.$broadcast('messages_read')\n          }\n          break\n\n        case 'updateReadMessagesContents':\n          var messages = update.messages\n          var len = messages.length\n          var i\n          var messageID, message\n          var historyMessage\n          for (i = 0; i < len; i++) {\n            messageID = messages[i]\n            if (message = messagesStorage[messageID]) {\n              delete message.pFlags.media_unread\n            }\n            if (historyMessage = messagesForHistory[messageID]) {\n              delete historyMessage.pFlags.media_unread\n            }\n          }\n          break\n\n        case 'updateDeleteMessages':\n        case 'updateDeleteChannelMessages':\n          var dialogsUpdated = {}\n          var historiesUpdated = {}\n          var channelID = update.channel_id\n          var messageID\n          var message, i\n          var peerID, foundDialog\n          var history\n          var peerMessagesToHandle\n          var peerMessagesHandlePos\n\n          for (i = 0; i < update.messages.length; i++) {\n            messageID = AppMessagesIDsManager.getFullMessageID(update.messages[i], channelID)\n            message = messagesStorage[messageID]\n            if (message) {\n              peerID = getMessagePeer(message)\n              history = historiesUpdated[peerID] || (historiesUpdated[peerID] = {count: 0, unread: 0, msgs: {}})\n\n              if (!message.pFlags.out && message.pFlags.unread) {\n                history.unread++\n                NotificationsManager.cancel('msg' + messageID)\n              }\n              history.count++\n              history.msgs[messageID] = true\n\n              if (messagesForHistory[messageID]) {\n                messagesForHistory[messageID].deleted = true\n                delete messagesForHistory[messageID]\n              }\n              if (messagesForDialogs[messageID]) {\n                messagesForDialogs[messageID].deleted = true\n                delete messagesForDialogs[messageID]\n              }\n              message.deleted = true\n              messagesStorage[messageID] = {\n                deleted: true,\n                id: messageID,\n                from_id: message.from_id,\n                to_id: message.to_id,\n                flags: message.flags,\n                pFlags: message.pFlags,\n                date: message.date\n              }\n\n              peerMessagesToHandle = newMessagesToHandle[peerID]\n              if (peerMessagesToHandle && peerMessagesToHandle.length) {\n                peerMessagesHandlePos = peerMessagesToHandle.indexOf(messageID)\n                if (peerMessagesHandlePos != -1) {\n                  peerMessagesToHandle.splice(peerMessagesHandlePos)\n                }\n              }\n            }\n          }\n\n          angular.forEach(historiesUpdated, function (updatedData, peerID) {\n            var historyStorage = historiesStorage[peerID]\n            if (historyStorage !== undefined) {\n              var newHistory = []\n              var newPending = []\n              for (var i = 0; i < historyStorage.history.length; i++) {\n                if (!updatedData.msgs[historyStorage.history[i]]) {\n                  newHistory.push(historyStorage.history[i])\n                }\n              }\n              historyStorage.history = newHistory\n              if (updatedData.count &&\n                historyStorage.count !== null &&\n                historyStorage.count > 0) {\n                historyStorage.count -= updatedData.count\n                if (historyStorage.count < 0) {\n                  historyStorage.count = 0\n                }\n              }\n\n              for (var i = 0; i < historyStorage.pending.length; i++) {\n                if (!updatedData.msgs[historyStorage.pending[i]]) {\n                  newPending.push(historyStorage.pending[i])\n                }\n              }\n              historyStorage.pending = newPending\n\n              $rootScope.$broadcast('history_delete', {peerID: peerID, msgs: updatedData.msgs})\n            }\n\n            var foundDialog = getDialogByPeerID(peerID)[0]\n            if (foundDialog) {\n              if (updatedData.unread) {\n                foundDialog.unread_count -= updatedData.unread\n\n                $rootScope.$broadcast('dialog_unread', {\n                  peerID: peerID,\n                  count: foundDialog.unread_count\n                })\n              }\n\n              if (updatedData.msgs[foundDialog.top_message]) {\n                reloadConversation(peerID)\n              }\n            }\n          })\n          break\n\n        case 'updateChannel':\n          var channelID = update.channel_id\n          var peerID = -channelID\n          var channel = AppChatsManager.getChat(channelID)\n\n          var needDialog = channel._ == 'channel' && (!channel.pFlags.left && !channel.pFlags.kicked)\n          var foundDialog = getDialogByPeerID(peerID)\n          var hasDialog = foundDialog.length > 0\n\n          var canViewHistory = channel._ == 'channel' && (channel.username || !channel.pFlags.left && !channel.pFlags.kicked) && true || false\n          var hasHistory = historiesStorage[peerID] !== undefined\n\n          if (canViewHistory != hasHistory) {\n            delete historiesStorage[peerID]\n            $rootScope.$broadcast('history_forbidden', peerID)\n          }\n          if (hasDialog != needDialog) {\n            if (needDialog) {\n              reloadConversation(-channelID)\n            } else {\n              if (foundDialog[0]) {\n                dialogsStorage.dialogs.splice(foundDialog[1], 1)\n                $rootScope.$broadcast('dialog_drop', {peerID: peerID})\n              }\n            }\n          }\n          break\n\n        case 'updateChannelReload':\n          var channelID = update.channel_id\n          var peerID = -channelID\n          var foundDialog = getDialogByPeerID(peerID)\n          if (foundDialog[0]) {\n            dialogsStorage.dialogs.splice(foundDialog[1], 1)\n          }\n          delete historiesStorage[peerID]\n          reloadConversation(-channelID).then(function () {\n            $rootScope.$broadcast('history_reload', peerID)\n          })\n          break\n\n        case 'updateChannelMessageViews':\n          var views = update.views\n          var mid = AppMessagesIDsManager.getFullMessageID(update.id, update.channel_id)\n          var message = getMessage(mid)\n          if (message && message.views && message.views < views) {\n            message.views = views\n            $rootScope.$broadcast('message_views', {\n              mid: mid,\n              views: views\n            })\n          }\n          break\n      }\n    })\n\n    function reloadConversation (peerID) {\n      return MtpApiManager.invokeApi('messages.getPeerDialogs', {\n        peers: [\n          AppPeersManager.getInputPeerByID(peerID)\n        ]\n      }).then(function (dialogsResult) {\n        AppUsersManager.saveApiUsers(dialogsResult.users)\n        AppChatsManager.saveApiChats(dialogsResult.chats)\n        saveMessages(dialogsResult.messages)\n\n        var updatedDialogs = {}\n        var hasUpdated = false\n        angular.forEach(dialogsResult.dialogs, function (dialog) {\n          if (dialog.top_message) {\n            saveConversation(dialog)\n            if (getDialogByPeerID(dialog.peerID).length) {\n              $rootScope.$broadcast('dialog_top', dialog)\n            } else {\n              updatedDialogs[dialog.peerID] = dialog\n              hasUpdated = true\n            }\n          } else {\n            var peerID = AppPeersManager.getPeerID(dialog.peer)\n            var foundDialog = getDialogByPeerID(peerID)\n            if (foundDialog.length) {\n              dialogsStorage.dialogs.splice(foundDialog[1], 1)\n              $rootScope.$broadcast('dialog_drop', {peerID: peerID})\n            }\n          }\n        })\n        if (hasUpdated) {\n          $rootScope.$broadcast('dialogs_multiupdate', updatedDialogs)\n        }\n      })\n    }\n\n    $rootScope.$on('webpage_updated', function (e, eventData) {\n      angular.forEach(eventData.msgs, function (msgID) {\n        var historyMessage = messagesForHistory[msgID]\n        if (historyMessage) {\n          historyMessage.media = {\n            _: 'messageMediaWebPage',\n            webpage: AppWebPagesManager.wrapForHistory(eventData.id)\n          }\n          $rootScope.$broadcast('message_edit', {\n            peerID: getMessagePeer(historyMessage),\n            id: historyMessage.id,\n            mid: msgID,\n            justMedia: true\n          })\n        }\n      })\n    })\n\n    $rootScope.$on('draft_updated', function (e, eventData) {\n      var peerID = eventData.peerID\n      var draft = eventData.draft\n\n      var dialog = getDialogByPeerID(peerID)[0]\n      if (dialog) {\n        var topDate\n        if (draft && draft.date) {\n          topDate = draft.date\n        } else {\n          var channelID = AppPeersManager.isChannel(peerID) ? -peerID : 0\n          var topDate = getMessage(dialog.top_message).date\n          if (channelID) {\n            var channel = AppChatsManager.getChat(channelID)\n            if (!topDate || channel.date && channel.date > topDate) {\n              topDate = channel.date\n            }\n          }\n        }\n        dialog.index = generateDialogIndex(topDate)\n        pushDialogToStorage(dialog)\n\n        $rootScope.$broadcast('dialog_draft', {\n          peerID: peerID,\n          draft: draft,\n          index: dialog.index\n        })\n      }\n    })\n\n    return {\n      getConversations: getConversations,\n      getHistory: getHistory,\n      getSearch: getSearch,\n      getMessage: getMessage,\n      getReplyKeyboard: getReplyKeyboard,\n      readHistory: readHistory,\n      readMessages: readMessages,\n      flushHistory: flushHistory,\n      deleteMessages: deleteMessages,\n      sendText: sendText,\n      sendFile: sendFile,\n      sendOther: sendOther,\n      forwardMessages: forwardMessages,\n      startBot: startBot,\n      shareGame: shareGame,\n      convertMigratedPeer: convertMigratedPeer,\n      getMessagePeer: getMessagePeer,\n      getMessageThumb: getMessageThumb,\n      getMessageShareLink: getMessageShareLink,\n      clearDialogCache: clearDialogCache,\n      wrapForDialog: wrapForDialog,\n      wrapForHistory: wrapForHistory,\n      wrapReplyMarkup: wrapReplyMarkup,\n      wrapSingleMessage: wrapSingleMessage,\n      wrapMessageText: wrapMessageText,\n      regroupWrappedHistory: regroupWrappedHistory\n    }\n  })\n\n  .service('AppMessagesIDsManager', function () {\n    var channelLocals = {}\n    var channelsByLocals = {}\n    var channelCurLocal = 0\n    var fullMsgIDModulus = 4294967296\n\n    return {\n      getFullMessageID: getFullMessageID,\n      getMessageIDInfo: getMessageIDInfo,\n      getMessageLocalID: getMessageLocalID,\n      splitMessageIDsByChannels: splitMessageIDsByChannels,\n      fullMsgIDModulus: fullMsgIDModulus\n    }\n\n    function getFullMessageID (msgID, channelID) {\n      if (!channelID || msgID <= 0) {\n        return msgID\n      }\n      msgID = getMessageLocalID(msgID)\n      var localStart = channelLocals[channelID]\n      if (!localStart) {\n        localStart = (++channelCurLocal) * fullMsgIDModulus\n        channelsByLocals[localStart] = channelID\n        channelLocals[channelID] = localStart\n      }\n\n      return localStart + msgID\n    }\n\n    function getMessageIDInfo (fullMsgID) {\n      if (fullMsgID < fullMsgIDModulus) {\n        return [fullMsgID, 0]\n      }\n      var msgID = fullMsgID % fullMsgIDModulus\n      var channelID = channelsByLocals[fullMsgID - msgID]\n\n      return [msgID, channelID]\n    }\n\n    function getMessageLocalID (fullMsgID) {\n      if (!fullMsgID) {\n        return 0\n      }\n      return fullMsgID % fullMsgIDModulus\n    }\n\n    function splitMessageIDsByChannels (mids) {\n      var msgIDsByChannels = {}\n      var midsByChannels = {}\n      var i\n      var mid, msgChannel\n      var channelID\n      for (i = 0; i < mids.length; i++) {\n        mid = mids[i]\n        msgChannel = getMessageIDInfo(mid)\n        channelID = msgChannel[1]\n        if (msgIDsByChannels[channelID] === undefined) {\n          msgIDsByChannels[channelID] = []\n          midsByChannels[channelID] = []\n        }\n        msgIDsByChannels[channelID].push(msgChannel[0])\n        midsByChannels[channelID].push(mid)\n      }\n\n      return {\n        msgIDs: msgIDsByChannels,\n        mids: midsByChannels\n      }\n    }\n  })\n"]}