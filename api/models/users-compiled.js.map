{"version":3,"sources":["users.js"],"names":[],"mappings":"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","file":"users-compiled.js","sourcesContent":["\nvar mongoose = require('mongoose');\nvar q = require('q');\n\n//defining schema for users table\nvar userSchema = new mongoose.Schema({\n\t  username: { type: String }, \n\t  password: String,\n\t  activeSession: String\n});\n\nvar User = mongoose.model('Users', userSchema);\n\n//generating random session id\n//todo: make sure no 2 users can have single sessionId\nfunction makeSessionId()\n{\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for( var i=0; i < 32; i++ )\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n}\n\n\n//Initlizing interface object of this model.\nvar userModel = {};\n\n//seeding database with default users\nuserModel.seed = function(){\n\tvar defaultUser = new User({username:'ali', password:'5f4dcc3b5aa765d61d8327deb882cf99', activeSession:''});\n\tdefaultUser.save(function(err, user) {\n\t  if(err) console.dir('error occured in populating database');\n\t});\n\n\tdefaultUser = new User({username:'harry', password:'5f4dcc3b5aa765d61d8327deb882cf99', activeSession:''});\n\tdefaultUser.save(function(err, user) {\n\t  if(err) console.dir('error occured in populating database');\n\t});\n\n\tdefaultUser = new User({username:'tom', password:'5f4dcc3b5aa765d61d8327deb882cf99', activeSession:''});\n\tdefaultUser.save(function(err, user) {\n\t  if(err) console.dir('error occured in populating database');\n\t});\n\n\tconsole.log('users table populated.');\n};\n\n//Function to auth user baed on username and password.\nuserModel.authUser = function(username, password){\n\tvar results = q.defer();\n\n\tUser.findOne({username: username, password: password},function(err, dbuser) {\n\t\tif (err){\n\t\t\tresults.reject(err);\n\t\t} \n\n\n\t\tif(dbuser){\n\t\t\t\n\t\t\tdbuser.activeSession = makeSessionId();\n\t\t\tdbuser.markModified('string');\n\t\t\tdbuser.save(function(err, dbuser){\n\t\t\t\tvar response = {};\n\n\t\t\t\tresponse.status = 'success';\n\t\t\t\tresponse.sessionId = dbuser.activeSession;\n\t\t\t\tresponse.username = dbuser.username;\n\t\t\t  \tresults.resolve(response);\n\t\t\t});\n\n\t\t\t\t\n\t\t} else{\n\t\t\tvar response = {};\n\t\t\tresponse.status = 'error';\n\t\t\tresponse.error = 'Invalid username or password';\n\t\t  \tresults.resolve(response);\t\n\t\t}\n\t});\n\n\treturn results.promise;\n};\n\n//Function to return users by its sessionID.\nuserModel.getBySessionId = function(sessionId){\n\tvar results = q.defer();\n\n\tUser.findOne({activeSession: sessionId},function(err, dbuser) {\n\t\tif (err){\n\t\t\tresults.reject(err);\n\t\t} \n\t\t\n\t\tresults.resolve(dbuser);\n\t});\n\n\treturn results.promise;\n};\n\n//Function to return all users.\nuserModel.get = function(){\n\tvar results = q.defer();\n\n\tUser.find(function(err, users) {\n\t  if (err){\n\t  \tresults.reject(err);\n\t  } \n\t  results.resolve(users);\n\t});\n\n\treturn results.promise;\n};\n\n\n//Function to logout user.\nuserModel.logout = function(sessionId){\n\tvar results = q.defer();\n\n\tUser.findOne({activeSession: sessionId},function(err, dbuser) {\n\t\tif (err){\n\t\t\tresults.reject(err);\n\t\t} \n\t\tif(dbuser){\n\t\t\tdbuser.activeSession='';\n\t\t\tdbuser.markModified('string');\n\t\t\tdbuser.save();\n\t\t\tresults.resolve(dbuser);\t\n\t\t}\n\t\tresults.reject({status:'error', error:'No active session'});\n\t\t\n\t});\n\n\treturn results.promise;\n};\n\nmodule.exports = userModel;"]}